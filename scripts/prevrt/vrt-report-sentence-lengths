#! /usr/bin/env python3
# -*- mode: Python; -*-

from collections import Counter
from itertools import groupby
import os, re, sys, traceback

from vrtargslib import trans_args, trans_main
from vrtargslib import BadData, BadCode

def parsearguments():
    description = '''

    Report on sentence lengths in tokens.

    '''

    parser = trans_args(description = description, inplace = False)

    args = parser.parse_args()
    args.prog = parser.prog
    args.inplace = False
    args.backup = None
    return args

def main(args, ins, ous):

    implement_main(args, ins, ous)

    return 0

def implement_main(args, ins, ous):

    def issome(line): return not line.isspace()
    def isdata(line): return not line.startswith('<')

    print('length', 'count', sep = '\t', file = ous)

    counter =  Counter(sum(1 for token in group)
                       for isdata, group
                       in  groupby(filter(issome, ins), isdata)
                       if isdata)
    
    for length, count in sorted(counter.items()):
        print(length, count, sep = '\t', file = ous)

if __name__ == '__main__':
    trans_main(parsearguments(), main)
