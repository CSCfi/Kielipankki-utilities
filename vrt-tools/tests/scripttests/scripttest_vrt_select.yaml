
# scripttestlib tests for vrt-select


# Default input and output

- defaults:
    input:
      stdin: &input-1 |
        <!-- #vrt positional-attributes: word -->
        <text a="aa" b="ba" c="ca" n="21">
        <sentence>
        a
        </sentence>
        </text>
        <text a="ab" b="ba" c="cb" n="1">
        <sentence>
        c
        </sentence>
        </text>
        <text a="ac" b="ba" c="ca" n="10">
        <sentence>
        e
        </sentence>
        </text>
        <text a="ad" b="bb" c="ca" n="2">
        <sentence>
        g
        </sentence>
        </text>
        <text a="ae" b="bb" c="cb" n="3">
        <sentence>
        i
        </sentence>
        </text>
    output:
      # No errors
      returncode: 0
      stderr: ''


# Test cases


# Argument checking and handling


- name: 'vrt-select: --test is required'
  input:
    cmdline: vrt-select
  output:
    returncode: 2
    stderr:
      regex: '.*error: the following arguments are required: --test.*'
    stdout: ''


- name: 'vrt-select: No "=" in attribute test'
  input:
    cmdline: vrt-select --test a
  output:
    returncode: 1
    stderr:
      regex: '.*Attribute test not of the form attrname=regexp or attrname=<\[\*\]filename: a.*'
    stdout: ''


- name: 'vrt-select: No attribute name in attribute test'
  input:
    cmdline: vrt-select --test "=a"
  output:
    returncode: 1
    stderr:
      regex: '.*Attribute test not of the form attrname=regexp or attrname=<\[\*\]filename: =a.*'
    stdout: ''


# Extra comments and other tags


- name: 'vrt-select: Preserve initial and final comments and tags and comments above texts'
  input:
    cmdline: vrt-select --test "b=bb"
    stdin: |
      <?xml>
      <!-- #vrt positional-attributes: word -->
      <!-- Another comment -->
      <corpus name="test">
      <!-- text 1 -->
      <text a="aa" b="ba" c="ca" n="21">
      <!-- within text -->
      <sentence>
      a
      </sentence>
      <!-- within text, too -->
      </text>
      <!-- text 2 -->
      <!-- text 2a -->
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>
      <!-- text 3 -->
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>
      <!-- text 4 -->
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>
      <!-- text 5 -->
      <text a="ae" b="bb" c="cb" n="3">
      <sentence>
      i
      </sentence>
      </text>
      </corpus>
      <!-- End -->
  output:
    stdout: |
      <?xml>
      <!-- #vrt positional-attributes: word -->
      <!-- Another comment -->
      <corpus name="test">
      <!-- text 1 -->
      <!-- text 2 -->
      <!-- text 2a -->
      <!-- text 3 -->
      <!-- text 4 -->
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>
      <!-- text 5 -->
      <text a="ae" b="bb" c="cb" n="3">
      <sentence>
      i
      </sentence>
      </text>
      </corpus>
      <!-- End -->


# Single attribute test


- name: 'vrt-select: Keep structures based on a single attribute test'
  input:
    cmdline: vrt-select --test "b=.a"
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>


- name: 'vrt-select: Drop structures based on a single attribute test'
  input:
    cmdline: vrt-select --drop --test "b=.a"
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>
      <text a="ae" b="bb" c="cb" n="3">
      <sentence>
      i
      </sentence>
      </text>


- name: 'vrt-select: Attribute test requires a full match'
  input:
    cmdline: vrt-select --test "n=."
  output:
    stdout: &output-1 |
        <!-- #vrt positional-attributes: word -->
        <text a="ab" b="ba" c="cb" n="1">
        <sentence>
        c
        </sentence>
        </text>
        <text a="ad" b="bb" c="ca" n="2">
        <sentence>
        g
        </sentence>
        </text>
        <text a="ae" b="bb" c="cb" n="3">
        <sentence>
        i
        </sentence>
        </text>


# Verbose output


- name: 'vrt-select: Verbose output'
  input:
    cmdline: vrt-select --test "n=." --verbose
  output:
    stdout: *output-1
    stderr: &stderr-1 |
      5 text structures in input, kept 3, dropped 2


- name: 'vrt-select: --comment'
  input:
    cmdline: vrt-select --test "n=." --comment
  output:
    stdout: &stdout-1
      value: *output-1
      transform-expected:
        append: |
          <!-- #vrt info: vrt-select: 5 text structures in input, kept 3, dropped 2 -->


- name: 'vrt-select: --comment --verbose'
  input:
    cmdline: vrt-select --test "n=." --comment --verbose
  output:
    stdout: *stdout-1
    stderr: *stderr-1


# Multiple attribute tests


- name: 'vrt-select: Keep structures based on both of two attribute tests'
  input:
    cmdline: vrt-select --test "a=.[abc]" --test "c=ca"
  output:
    stdout: &output-2 |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>


- name: 'vrt-select: Attribute test order does not matter'
  input:
    cmdline: vrt-select --test "c=ca" --test "a=.[abc]"
  output:
    stdout: *output-2


- name: 'vrt-select: Keep structures based on all of three attribute tests'
  input:
    cmdline: vrt-select --test "a=.[abc]" --test "c=ca" --test "n=2."
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>


- name: 'vrt-select: Keep structures based on either of two attribute tests'
  input:
    cmdline: vrt-select --any --test "a=.[abc]" --test "c=ca"
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>


- name: 'vrt-select: Keep structures based on any of three attribute tests'
  input:
    cmdline: vrt-select --any --test "a=.[ac]" --test "c=ca" --test "n=3"
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>
      <text a="ae" b="bb" c="cb" n="3">
      <sentence>
      i
      </sentence>
      </text>


- name: 'vrt-select: Drop structures based on both of two attribute tests'
  input:
    cmdline: vrt-select --drop --test "a=.[abc]" --test "c=ca"
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>
      <text a="ae" b="bb" c="cb" n="3">
      <sentence>
      i
      </sentence>
      </text>


- name: 'vrt-select: Drop structures based on all of three attribute tests'
  input:
    cmdline: vrt-select --drop --test "a=.[abc]" --test "c=ca" --test "n=2."
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>
      <text a="ae" b="bb" c="cb" n="3">
      <sentence>
      i
      </sentence>
      </text>


- name: 'vrt-select: Drop structures based on either of two attribute tests'
  input:
    cmdline: vrt-select --drop --any --test "a=.[abc]" --test "c=ca"
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="ae" b="bb" c="cb" n="3">
      <sentence>
      i
      </sentence>
      </text>


- name: 'vrt-select: Drop structures based on any of three attribute tests'
  input:
    cmdline: vrt-select --drop --any --test "a=.[ac]" --test "c=ca" --test "n=3"
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>


# Multiple tests for the same attribute


- name: 'vrt-select: Keep structures based on both of two attribute tests for the same attribute'
  input:
    cmdline: vrt-select --test "n=.*1.*" --test "n=.*2.*"
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>


- name: 'vrt-select: Drop structures based on both of two attribute tests for the same attribute'
  input:
    cmdline: vrt-select --drop --test "n=.*1.*" --test "n=.*2.*"
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>
      <text a="ae" b="bb" c="cb" n="3">
      <sentence>
      i
      </sentence>
      </text>


- name: 'vrt-select: Keep structures based on any of three attribute tests for the same attribute'
  input:
    cmdline: vrt-select --any --test "a=.a" --test "a=.b" --test "a=.c"
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>


- name: 'vrt-select: Drop structures based on any of three attribute tests for the same attribute'
  input:
    cmdline: vrt-select --drop --any --test "a=.a" --test "a=.b" --test "a=.c"
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>
      <text a="ae" b="bb" c="cb" n="3">
      <sentence>
      i
      </sentence>
      </text>


# Select structures other than text


- name: 'vrt-select: Select paragraphs'
  input:
    cmdline: vrt-select --drop --struct paragraph --test "d=p2"
    stdin: &input-2 |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <paragraph d="p1">
      <sentence e="s1">
      a
      </sentence>
      </paragraph>
      </text>
      <text a="ab" b="ba" c="cb" n="1">
      <paragraph d="p2">
      <sentence e="s2">
      c
      </sentence>
      </paragraph>
      <paragraph d="p3">
      <sentence e="s3">
      e
      </sentence>
      <sentence e="s4">
      g
      </sentence>
      <sentence e="s5">
      i
      </sentence>
      </paragraph>
      </text>
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <paragraph d="p1">
      <sentence e="s1">
      a
      </sentence>
      </paragraph>
      </text>
      <text a="ab" b="ba" c="cb" n="1">
      <paragraph d="p3">
      <sentence e="s3">
      e
      </sentence>
      <sentence e="s4">
      g
      </sentence>
      <sentence e="s5">
      i
      </sentence>
      </paragraph>
      </text>


- name: 'vrt-select: Select paragraphs, leaving an empty text'
  input:
    cmdline: vrt-select --drop --struct paragraph --test "d=p1"
    stdin: *input-2
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      </text>
      <text a="ab" b="ba" c="cb" n="1">
      <paragraph d="p2">
      <sentence e="s2">
      c
      </sentence>
      </paragraph>
      <paragraph d="p3">
      <sentence e="s3">
      e
      </sentence>
      <sentence e="s4">
      g
      </sentence>
      <sentence e="s5">
      i
      </sentence>
      </paragraph>
      </text>


- name: 'vrt-select: Select sentences'
  input:
    cmdline: vrt-select --drop --struct sentence --test "e=s[45]"
    stdin: *input-2
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <paragraph d="p1">
      <sentence e="s1">
      a
      </sentence>
      </paragraph>
      </text>
      <text a="ab" b="ba" c="cb" n="1">
      <paragraph d="p2">
      <sentence e="s2">
      c
      </sentence>
      </paragraph>
      <paragraph d="p3">
      <sentence e="s3">
      e
      </sentence>
      </paragraph>
      </text>


- name: 'vrt-select: Select sentences, leaving an empty paragraph and text'
  input:
    cmdline: vrt-select --drop --struct sentence --test "e=s[13-5]"
    stdin: *input-2
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <paragraph d="p1">
      </paragraph>
      </text>
      <text a="ab" b="ba" c="cb" n="1">
      <paragraph d="p2">
      <sentence e="s2">
      c
      </sentence>
      </paragraph>
      <paragraph d="p3">
      </paragraph>
      </text>


# Read values to test for from file


- name: 'vrt-select: Single attribute, values from file, --keep'
  input:
    cmdline:
    - vrt-select --keep --test "a=<a.txt"
    - vrt-select --keep --test "a=< a.txt "
    file:a.txt: &file-a |
      aa
      ad
      az
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>

- name: 'vrt-select: Single attribute, values from file, --drop'
  input:
    cmdline: vrt-select --drop --test "a=<a.txt"
    file:a.txt: *file-a
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>
      <text a="ae" b="bb" c="cb" n="3">
      <sentence>
      i
      </sentence>
      </text>

- name: 'vrt-select: Two attributes, values from different files, --keep'
  input:
    cmdline: vrt-select --keep --test "a=<a.txt" --test "b=<b.txt"
    files: &files-a-b
      a.txt: *file-a
      b.txt: |
        ba
        bc
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>

- name: 'vrt-select: Two attributes, values from different files, --keep, --any'
  input:
    cmdline: vrt-select --keep --any --test "a=<a.txt" --test "b=<b.txt"
    files: *files-a-b
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>

- name: 'vrt-select: Two attributes, values from same file, --keep'
  input:
    cmdline: vrt-select --keep --test "a=<a.txt" --test "a1=<a.txt"
    file:a.txt: *file-a
    stdin: &input-a-a1 |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" a1="ab">
      <sentence>
      a
      </sentence>
      </text>
      <text a="aa" a1="ad">
      <sentence>
      c
      </sentence>
      </text>
      <text a="ab" a1="ad">
      <sentence>
      e
      </sentence>
      </text>
      <text a="ab" a1="ac">
      <sentence>
      g
      </sentence>
      </text>
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" a1="ad">
      <sentence>
      c
      </sentence>
      </text>

- name: 'vrt-select: Two attributes, regexp + values from file, --keep'
  input:
    cmdline: vrt-select --keep --test "n=.*1.*" --test "a=<a.txt"
    file:a.txt: *file-a
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>

- name: 'vrt-select: Two attributes, regexp + values from file, --keep, --any'
  input:
    cmdline: vrt-select --keep --any --test "n=.*1.*" --test "a=<a.txt"
    file:a.txt: *file-a
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>

- name: 'vrt-select: Single attribute, two tests, values from different files, --keep'
  input:
    cmdline: vrt-select --keep --test "a=<a.txt" --test "a=<a1.txt"
    file:a.txt: *file-a
    file:a1.txt: &file-a1 |
      aa
      ac
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>

- name: 'vrt-select: Single attribute, two tests, values from different files, --keep, --any'
  input:
    cmdline: vrt-select --keep --any --test "a=<a.txt" --test "a=<a1.txt"
    file:a.txt: *file-a
    file:a1.txt: *file-a1
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>

- name: 'vrt-select: Single attribute, two tests, regexp + values from file, --keep'
  input:
    cmdline: vrt-select --keep --test "a=.d" --test "a=<a.txt"
    file:a.txt: *file-a
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>

- name: 'vrt-select: Values from file not found'
  input:
    cmdline: vrt-select --keep --test "a=<a.txt"
  output:
    returncode: 1
    stderr: |
      vrt-select: Error reading file a.txt: [Errno 2] No such file or directory: 'a.txt'
    stdout: ''


# Read regular expressions to match from file


- name: 'vrt-select: Single attribute, regexps from file, --keep'
  input:
    cmdline:
    - vrt-select --keep --test "b=<*re-a.txt"
    - vrt-select --keep --test "b=<* re-a.txt "
    file:re-a.txt: &file-re-a |
      a.
      .a
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>

- name: 'vrt-select: Two attributes, regexps from different files, --keep'
  input:
    cmdline: vrt-select --keep --test "a=<*re-b.txt" --test "b=<*re-a.txt"
    files: &files-re-a-b
      re-a.txt: *file-re-a
      re-b.txt: |
        .*b.*
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>

- name: 'vrt-select: Two attributes, regexps from different files, --keep, --any'
  input:
    cmdline: vrt-select --keep --any --test "a=<*re-b.txt" --test "b=<*re-a.txt"
    files: *files-re-a-b
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>

- name: 'vrt-select: Two attributes, regexps from same file, --keep'
  input:
    cmdline: vrt-select --keep --test "a=<*re-a.txt" --test "b=<*re-a.txt"
    file:re-a.txt: *file-re-a
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>

- name: 'vrt-select: Two attributes, regexp + regexps from file, --keep'
  input:
    cmdline: vrt-select --keep --test "n=.*2.*" --test "b=<*re-a.txt"
    file:re-a.txt: *file-re-a
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>

- name: 'vrt-select: Two attributes, regexp + regexps from file, --keep, --any'
  input:
    cmdline: vrt-select --keep --any --test "n=.*2.*" --test "b=<*re-a.txt"
    file:re-a.txt: *file-re-a
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="aa" b="ba" c="ca" n="21">
      <sentence>
      a
      </sentence>
      </text>
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>
      <text a="ac" b="ba" c="ca" n="10">
      <sentence>
      e
      </sentence>
      </text>
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>

- name: 'vrt-select: Single attribute, two tests, regexps from different files, --keep'
  input:
    cmdline: vrt-select --keep --test "a=<*re-a.txt" --test "a=<*re-b.txt"
    files: *files-re-a-b
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="ab" b="ba" c="cb" n="1">
      <sentence>
      c
      </sentence>
      </text>

- name: 'vrt-select: Single attribute, two tests, regexps from different files, --keep, --any'
  input:
    cmdline: vrt-select --keep --any --test "a=<*re-a.txt" --test "a=<*re-b.txt"
    files: *files-re-a-b
  output:
    stdout: *input-1

- name: 'vrt-select: Single attribute, two tests, regexp + regexps from file, --keep'
  input:
    cmdline: vrt-select --keep --test "a=.d" --test "a=<*a.txt"
    file:a.txt: *file-a
  output:
    stdout: |
      <!-- #vrt positional-attributes: word -->
      <text a="ad" b="bb" c="ca" n="2">
      <sentence>
      g
      </sentence>
      </text>

- name: 'vrt-select: Regexps from file not found'
  input:
    cmdline: vrt-select --keep --test "a=<*a.txt"
  output:
    returncode: 1
    stderr: |
      vrt-select: Error reading file a.txt: [Errno 2] No such file or directory: 'a.txt'
    stdout: ''
