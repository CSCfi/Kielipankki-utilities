- name: 'hrt-encode-tags: No intra-paragraph markup'
  input:
    cmdline: hrt-encode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      HRT file without
      intra-paragraph markup.
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      HRT file without
      intra-paragraph markup.
      </paragraph>
      </text>

- name: 'hrt-encode-tags: Intra-paragraph but no intra-word markup'
  input:
    cmdline: hrt-encode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      Some <i>intra-paragraph</i> markup.
      Also with <a href="http://www.example.com">attributes</a>.
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      <!-- #vrt structure-tag: i|4 Some intra-para -->
      <!-- #vrt structure-tag: /i|19 -paragraph markup.Als -->
      <!-- #vrt structure-tag: a href="http://www.example.com"|34 p.Alsowith attributes -->
      <!-- #vrt structure-tag: /a|44 attributes . -->
      Some intra-paragraph markup.
      Also with attributes.
      </paragraph>
      </text>

- name: 'hrt-encode-tags: Intra-word markup'
  input:
    cmdline: hrt-encode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      Some <i>intra</i>word mar<a href="http://www.example.com">ku</a>p.
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      <!-- #vrt structure-tag: i|4 Some intrawordm -->
      <!-- #vrt structure-tag: /i|9 Someintra wordmarkup -->
      <!-- #vrt structure-tag: a href="http://www.example.com"|16 trawordmar kup. -->
      <!-- #vrt structure-tag: /a|18 awordmarku p. -->
      Some intraword markup.
      </paragraph>
      </text>

- name: 'hrt-encode-tags: Intra-paragraph tags at the beginning and end of a line'
  input:
    cmdline: hrt-encode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      <i>Test</i>
      <span class="test">Test2</span> follows.
      And <b>test3.</b>
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      <!-- #vrt structure-tag: i|0  TestTest2f -->
      <!-- #vrt structure-tag: /i|4 Test Test2follo -->
      <!-- #vrt structure-tag: span class="test"|4 Test Test2follo -->
      <!-- #vrt structure-tag: /span|9 TestTest2 follows.An -->
      <!-- #vrt structure-tag: b|20 ollows.And test3. -->
      <!-- #vrt structure-tag: /b|26 .Andtest3.  -->
      Test
      Test2 follows.
      And test3.
      </paragraph>
      </text>

- name: 'hrt-encode-tags: Multiple paragraphs with internal tags'
  input:
    cmdline: hrt-encode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      This is the first <i>test</i> paragraph.
      </paragraph>
      <paragraph id="2">
      Second <i>test</i> paragraph.
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      <!-- #vrt structure-tag: i|14 isthefirst testparagr -->
      <!-- #vrt structure-tag: /i|18 efirsttest paragraph. -->
      This is the first test paragraph.
      </paragraph>
      <paragraph id="2">
      <!-- #vrt structure-tag: i|6 Second testparagr -->
      <!-- #vrt structure-tag: /i|10 Secondtest paragraph. -->
      Second test paragraph.
      </paragraph>
      </text>

- name: 'hrt-encode-tags: Different preserved tags'
  input:
    cmdline: hrt-encode-tags --preserve-tags 'text chapter'
    stdin: |
      <text id="0">
      <chapter id="1">
      <paragraph id="2">
      Text with <i>internal</i> markup.
      </paragraph>
      </chapter>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <chapter id="1">
      <!-- #vrt structure-tag: paragraph id="2"|0  Textwithin -->
      <!-- #vrt structure-tag: i|8 Textwith internalma -->
      <!-- #vrt structure-tag: /i|16 thinternal markup. -->
      <!-- #vrt structure-tag: /paragraph|23 nalmarkup.  -->
      Text with internal markup.
      </chapter>
      </text>

- name: 'hrt-encode-tags: Tags on their own lines'
  input:
    cmdline: hrt-encode-tags
    stdin: |
      <text>
      <paragraph>
      <foo>
      <bar>
      zoo
      </bar>
      </foo>
      goo
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text>
      <paragraph>
      <!-- #vrt structure-tag: foo|0  zoogoo -->
      <!-- #vrt structure-tag: bar|0  zoogoo -->
      <!-- #vrt structure-tag: /bar|3 zoo goo -->
      <!-- #vrt structure-tag: /foo|3 zoo goo -->
      zoo
      goo
      </paragraph>
      </text>

- name: 'hrt-encode-tags: Empty lines in input'
  input:
    cmdline: hrt-encode-tags
    stdin: |
      <text>
      <paragraph>
      This

      paragraph


      <i>contains</i>

      blank <i>lines</i>

      (several of them).

      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text>
      <paragraph>
      <!-- #vrt structure-tag: i|13 sparagraph containsbl -->
      <!-- #vrt structure-tag: /i|21 phcontains blanklines -->
      <!-- #vrt structure-tag: i|26 tainsblank lines(seve -->
      <!-- #vrt structure-tag: /i|31 blanklines (severalof -->
      This

      paragraph


      contains

      blank lines

      (several of them).

      </paragraph>
      </text>

- name: 'hrt-encode-tags: Mulitple tags on a single line'
  input:
    cmdline: hrt-encode-tags
    stdin: |
      ab
      <b><c>
      <a>cd</a>
      <a>ef</a>
      </c></b>

      gh
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <!-- #vrt structure-tag: b|2 ab cdefgh -->
      <!-- #vrt structure-tag: c|2 ab cdefgh -->
      <!-- #vrt structure-tag: a|2 ab cdefgh -->
      <!-- #vrt structure-tag: /a|4 abcd efgh -->
      <!-- #vrt structure-tag: a|4 abcd efgh -->
      <!-- #vrt structure-tag: /a|6 abcdef gh -->
      <!-- #vrt structure-tag: /c|6 abcdef gh -->
      <!-- #vrt structure-tag: /b|6 abcdef gh -->
      ab
      cd
      ef

      gh

- name: 'hrt-encode-tags: Leading whitespace'
  input:
    cmdline: hrt-encode-tags
    stdin: "  ab\n  <b><c>\n   <a>cd</a>\n\t<a>ef</a>\n\t</c></b>\n\n\tgh\n"
  output:
    returncode: 0
    stderr: ""
    stdout: "<!-- #vrt structure-tag: b|2 ab cdefgh -->\n<!-- #vrt structure-tag: c|2\
      \ ab cdefgh -->\n<!-- #vrt structure-tag: a|2 ab cdefgh -->\n<!-- #vrt structure-tag:\
      \ /a|4 abcd efgh -->\n<!-- #vrt structure-tag: a|4 abcd efgh -->\n<!-- #vrt structure-tag:\
      \ /a|6 abcdef gh -->\n<!-- #vrt structure-tag: /c|6 abcdef gh -->\n<!-- #vrt structure-tag:\
      \ /b|6 abcdef gh -->\n  ab\n     cd\n\tef\n\t\n\tgh\n"

- name: 'hrt-encode-tags: Trailing whitespace'
  input:
    cmdline: hrt-encode-tags
    stdin: "ab  \n<b><c>  \n<a>cd</a>  \n<a>ef</a>  \n</c></b>\t \n\t\ngh\t\n"
  output:
    returncode: 0
    stderr: ""
    stdout: "<!-- #vrt structure-tag: b|2 ab cdefgh -->\n<!-- #vrt structure-tag: c|2\
      \ ab cdefgh -->\n<!-- #vrt structure-tag: a|2 ab cdefgh -->\n<!-- #vrt structure-tag:\
      \ /a|4 abcd efgh -->\n<!-- #vrt structure-tag: a|4 abcd efgh -->\n<!-- #vrt structure-tag:\
      \ /a|6 abcdef gh -->\n<!-- #vrt structure-tag: /c|6 abcdef gh -->\n<!-- #vrt structure-tag:\
      \ /b|6 abcdef gh -->\nab  \ncd\nef\n\t\ngh\t\n"

- name: 'hrt-encode-tags: Leading and trailing whitespace'
  input:
    cmdline: hrt-encode-tags
    stdin: "  ab  \n  <b><c>  \n   <a>cd</a>  \n\t<a>ef</a>\t\n\t</c></b>  \t\n\n\t\
      gh\t  \n"
  output:
    returncode: 0
    stderr: ""
    stdout: "<!-- #vrt structure-tag: b|2 ab cdefgh -->\n<!-- #vrt structure-tag: c|2\
      \ ab cdefgh -->\n<!-- #vrt structure-tag: a|2 ab cdefgh -->\n<!-- #vrt structure-tag:\
      \ /a|4 abcd efgh -->\n<!-- #vrt structure-tag: a|4 abcd efgh -->\n<!-- #vrt structure-tag:\
      \ /a|6 abcdef gh -->\n<!-- #vrt structure-tag: /c|6 abcdef gh -->\n<!-- #vrt structure-tag:\
      \ /b|6 abcdef gh -->\n  ab  \n     cd\n\tef\n\t\n\tgh\t  \n"

- name: 'hrt-encode-tags: Whitespace between tags on a line with only tags'
  input:
    cmdline: hrt-encode-tags
    stdin: "  ab  \n<b>\t<c>  \n   <a>cd</a>  \n\t<a>ef</a>\t<a>ij</a>\n\t</c>  </b>\
      \  \t\n\n\tgh\t  \n"
  output:
    returncode: 0
    stderr: ""
    stdout: "<!-- #vrt structure-tag: b|2 ab cdefijgh -->\n<!-- #vrt structure-tag:\
      \ c|2 ab cdefijgh -->\n<!-- #vrt structure-tag: a|2 ab cdefijgh -->\n<!-- #vrt structure-tag:\
      \ /a|4 abcd efijgh -->\n<!-- #vrt structure-tag: a|4 abcd efijgh -->\n<!-- #vrt\
      \ structure-tag: /a|6 abcdef ijgh -->\n<!-- #vrt structure-tag: a|6 abcdef ijgh\
      \ -->\n<!-- #vrt structure-tag: /a|8 abcdefij gh -->\n<!-- #vrt structure-tag: /c|8\
      \ abcdefij gh -->\n<!-- #vrt structure-tag: /b|8 abcdefij gh -->\n  ab  \n\t   cd\n\
      \tef\tij\n\t  \n\tgh\t  \n"

- name: 'hrt-encode-tags: No enclosing structures'
  input:
    cmdline: hrt-encode-tags
    stdin: |
      abc<i>def</i>ghi <i>jkl</i>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <!-- #vrt structure-tag: i|3 abc defghijkl -->
      <!-- #vrt structure-tag: /i|6 abcdef ghijkl -->
      <!-- #vrt structure-tag: i|9 abcdefghi jkl -->
      <!-- #vrt structure-tag: /i|12 cdefghijkl  -->
      abcdefghi jkl

- name: 'hrt-encode-tags: XML comments in input'
  # This could be divided into separate tests testing the different
  # kinds or positions of comments
  input:
    cmdline: hrt-encode-tags
    stdin: |
      <text>
      <!-- A comment before content -->
      <i>ab
      <!-- A comment before an end tag to be encoded -->
      </i>
      <!-- A comment in the middle of content -->
      <i>cd</i>
      <!-- A comment containing a vertical bar: | -->
      <!-- A comment containing nested markup: <a b="c">test</a> -->
      <!-- A comment with a double hyphen -- in the middle -->
      <!--A comment without a space at the beginning and end-->
      <!--   A comment   with multiple spaces at   the beginning, middle and end   -->
      ef <!-- A comment in the middle of a line --> gh
      ij<!-- An intra-word comment -->kl
      <!-- A comment after content -->
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text>
      <!-- #vrt structure-tag: !-- A comment before content --|0  abcdefghij -->
      <!-- #vrt structure-tag: i|0  abcdefghij -->
      <!-- #vrt structure-tag: !-- A comment before an end tag to be encoded --|2 ab cdefghijkl -->
      <!-- #vrt structure-tag: /i|2 ab cdefghijkl -->
      <!-- #vrt structure-tag: !-- A comment in the middle of content --|2 ab cdefghijkl -->
      <!-- #vrt structure-tag: i|2 ab cdefghijkl -->
      <!-- #vrt structure-tag: /i|4 abcd efghijkl -->
      <!-- #vrt structure-tag: !-- A comment containing a vertical bar: | --|4 abcd efghijkl -->
      <!-- #vrt structure-tag: !-- A comment containing nested markup: <a b="c">test</a> --|4 abcd efghijkl -->
      <!-- #vrt structure-tag: !-- A comment with a double hyphen -- in the middle --|4 abcd efghijkl -->
      <!-- #vrt structure-tag: !--A comment without a space at the beginning and end--|4 abcd efghijkl -->
      <!-- #vrt structure-tag: !--   A comment   with multiple spaces at   the beginning, middle and end   --|4 abcd efghijkl -->
      <!-- #vrt structure-tag: !-- A comment in the middle of a line --|6 abcdef ghijkl -->
      <!-- #vrt structure-tag: !-- An intra-word comment --|10 abcdefghij kl -->
      <!-- #vrt structure-tag: !-- A comment after content --|12 cdefghijkl  -->
      ab
      cd
      ef  gh
      ijkl
      </text>

- name: 'hrt-encode-tags: Ignore hyphens followed by spaces in contexts'
  input:
    cmdline: hrt-encode-tags
    stdin: |-
      <a>Hyph-
      enated</a> text; word-internal <a>hyp-
      hens</a> <a>pre‐</a>
      served.
      Lone <a>-</a> hyphens <a> - </a> preserved.
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <!-- #vrt structure-tag: a|0  Hyphenated -->
      <!-- #vrt structure-tag: /a|10 Hyphenated text;word- -->
      <!-- #vrt structure-tag: a|28 d-internal hyphenspre -->
      <!-- #vrt structure-tag: /a|35 nalhyphens preserved. -->
      <!-- #vrt structure-tag: a|35 nalhyphens preserved. -->
      <!-- #vrt structure-tag: /a|38 hyphenspre served.Lon -->
      <!-- #vrt structure-tag: a|49 erved.Lone -hyphens-p -->
      <!-- #vrt structure-tag: /a|50 rved.Lone- hyphens-pr -->
      <!-- #vrt structure-tag: a|57 ne-hyphens -preserved -->
      <!-- #vrt structure-tag: /a|58 e-hyphens- preserved. -->
      Hyph-
      enated text; word-internal hyp-
      hens pre‐
      served.
      Lone - hyphens  -  preserved.

- name: 'hrt-encode-tags: Do not ignore hyphens followed by spaces'
  input:
    cmdline: hrt-encode-tags --hyphens=''
    stdin: |-
      <a>Hyph-
      enated</a> text; word-internal <a>hyp-
      hens</a> <a>pre‐</a>
      served.
      Lone <a>-</a> hyphens <a> - </a> preserved.
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <!-- #vrt structure-tag: a|0  Hyph-enate -->
      <!-- #vrt structure-tag: /a|11 yph-enated text;word- -->
      <!-- #vrt structure-tag: a|29 d-internal hyp-henspr -->
      <!-- #vrt structure-tag: /a|37 alhyp-hens pre‐served -->
      <!-- #vrt structure-tag: a|37 alhyp-hens pre‐served -->
      <!-- #vrt structure-tag: /a|41 p-henspre‐ served.Lon -->
      <!-- #vrt structure-tag: a|52 erved.Lone -hyphens-p -->
      <!-- #vrt structure-tag: /a|53 rved.Lone- hyphens-pr -->
      <!-- #vrt structure-tag: a|60 ne-hyphens -preserved -->
      <!-- #vrt structure-tag: /a|61 e-hyphens- preserved. -->
      Hyph-
      enated text; word-internal hyp-
      hens pre‐
      served.
      Lone - hyphens  -  preserved.

- name: 'hrt-encode-tags: Do not encode special VRT comments'
  input:
    cmdline: hrt-encode-tags
    stdin: |
      <!-- #vrt info: test -->
      <text>
      <!-- #vrt info: test 2 -->
      abc
      <!-- #vrt info: test 3 -->
      </text>
      <!-- #vrt info: test 4 -->
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <!-- #vrt info: test -->
      <text>
      <!-- #vrt info: test 2 -->
      abc
      <!-- #vrt info: test 3 -->
      </text>
      <!-- #vrt info: test 4 -->
