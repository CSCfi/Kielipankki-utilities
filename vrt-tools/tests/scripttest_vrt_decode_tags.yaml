- name: 'vrt-decode-tags: No intra-paragraph markup'
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      HRT
      file
      without
      intra-paragraph
      markup
      .
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      HRT
      file
      without
      intra-paragraph
      markup
      .
      </paragraph>
      </text>

- name: 'vrt-decode-tags: Intra-paragraph but no intra-word markup'
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      <!-- #vrt structure-tag: i|4 Some intra-para -->
      <!-- #vrt structure-tag: /i|19 -paragraph markup.Als -->
      <!-- #vrt structure-tag: a href="http://www.example.com"|34 p.Alsowith attributes -->
      <!-- #vrt structure-tag: /a|44 attributes . -->
      Some
      intra-paragraph
      markup
      .
      Also
      with
      attributes
      .
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      Some
      <i struct_num="|1|">
      intra-paragraph
      </i>
      markup
      .
      Also
      with
      <a href="http://www.example.com" struct_num="|2|">
      attributes
      </a>
      .
      </paragraph>
      </text>

- name: 'vrt-decode-tags: Multiple paragraphs with internal tags'
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      <!-- #vrt structure-tag: i|14 isthefirst testparagr -->
      <!-- #vrt structure-tag: /i|18 efirsttest paragraph. -->
      This
      is
      the
      first
      test
      paragraph
      .
      </paragraph>
      <paragraph id="2">
      <!-- #vrt structure-tag: i|6 Second testparagr -->
      <!-- #vrt structure-tag: /i|10 Secondtest paragraph. -->
      Second
      test
      paragraph
      .
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      This
      is
      the
      first
      <i struct_num="|1|">
      test
      </i>
      paragraph
      .
      </paragraph>
      <paragraph id="2">
      Second
      <i struct_num="|2|">
      test
      </i>
      paragraph
      .
      </paragraph>
      </text>

- name: 'vrt-decode-tags: Empty lines in input'
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <text>
      <paragraph>
      <!-- #vrt structure-tag: i|13 sparagraph containsbl -->
      <!-- #vrt structure-tag: /i|21 phcontains blanklines -->
      <!-- #vrt structure-tag: i|26 tainsblank lines(seve -->
      <!-- #vrt structure-tag: /i|31 blanklines (severalof -->
      This

      paragraph


      contains

      blank
      lines

      (several
      of
      them)
      .

      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text>
      <paragraph>
      This

      paragraph
      <i struct_num="|1|">


      contains
      </i>

      blank
      <i struct_num="|2|">
      lines
      </i>

      (several
      of
      them)
      .

      </paragraph>
      </text>

- name: 'vrt-decode-tags: Intra-paragraph markup and an additional positional attribute'
  input:
    cmdline: vrt-decode-tags
    stdin: "<text id=\"0\">\n<paragraph id=\"1\">\n<!-- #vrt structure-tag: i|4 Some\
      \ intra-para -->\n<!-- #vrt structure-tag: /i|19 -paragraph markup.Als -->\n<!--\
      \ #vrt structure-tag: a href=\"http://www.example.com\"|34 p.Alsowith attributes\
      \ -->\n<!-- #vrt structure-tag: /a|44 attributes . -->\nSome\t7\nintra-paragraph\t\
      7\nmarkup\t7\n.\t7\nAlso\t8\nwith\t8\nattributes\t8\n.\t8\n</paragraph>\n</text>\n"
  output:
    returncode: 0
    stderr: ""
    stdout: "<text id=\"0\">\n<paragraph id=\"1\">\nSome\t7\n<i struct_num=\"|1|\">\nintra-paragraph\t\
      7\n</i>\nmarkup\t7\n.\t7\nAlso\t8\nwith\t8\n<a href=\"http://www.example.com\" struct_num=\"|2|\">\n\
      attributes\t8\n</a>\n.\t8\n</paragraph>\n</text>\n"

- name: 'vrt-decode-tags: Intra-paragraph markup with sentences'
  input:
    prog: vrt-decode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      <!-- #vrt structure-tag: i|4 Some intra-para -->
      <!-- #vrt structure-tag: /i|19 -paragraph markup.Als -->
      <!-- #vrt structure-tag: a href="http://www.example.com"|34 p.Alsowith attributes -->
      <!-- #vrt structure-tag: /a|44 attributes . -->
      <sentence id="1">
      Some
      intra-paragraph
      markup
      .
      </sentence>
      <sentence id="2">
      Also
      with
      attributes
      .
      </sentence>
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      <sentence id="1">
      Some
      <i struct_num="|1|">
      intra-paragraph
      </i>
      markup
      .
      </sentence>
      <sentence id="2">
      Also
      with
      <a href="http://www.example.com" struct_num="|2|">
      attributes
      </a>
      .
      </sentence>
      </paragraph>
      </text>

- name: 'vrt-decode-tags: Intra-paragraph markup with other added markup for the same
    words'
  input:
    prog: vrt-decode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      <!-- #vrt structure-tag: i|4 Some intra-para -->
      <!-- #vrt structure-tag: /i|19 -paragraph markup.Als -->
      <!-- #vrt structure-tag: a href="http://www.example.com"|34 p.Alsowith attributes -->
      <!-- #vrt structure-tag: /a|44 attributes . -->
      Some
      <marked x="1">
      intra-paragraph
      </marked>
      markup
      .
      <sentence id="2">
      Also
      <marked x="2">
      with
      <marked2 x="1">
      attributes
      </marked>
      .
      </marked2>
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      Some
      <i struct_num="|1|">
      <marked x="1">
      intra-paragraph
      </i>
      </marked>
      markup
      .
      <sentence id="2">
      Also
      <marked x="2">
      with
      <a href="http://www.example.com" struct_num="|2|">
      <marked2 x="1">
      attributes
      </a>
      </marked>
      .
      </marked2>
      </paragraph>
      </text>

- name: 'vrt-decode-tags: Intra-word markup'
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      <!-- #vrt structure-tag: i|4 Some intrawordm -->
      <!-- #vrt structure-tag: /i|9 Someintra wordmarkup -->
      <!-- #vrt structure-tag: a href="http://www.example.com"|16 trawordmar kup. -->
      <!-- #vrt structure-tag: /a|18 awordmarku p. -->
      Some
      intraword
      markup
      .
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      Some
      <i struct_num="|1|" struct_charspan="|1-5|" struct_tokens="|intra|" struct_tokens_all="|intra|" struct_partnum="|1/1|" struct_continues="||">
      intraword
      </i>
      <a href="http://www.example.com" struct_num="|2|" struct_charspan="|4-5|" struct_tokens="|ku|" struct_tokens_all="|ku|" struct_partnum="|1/1|" struct_continues="||">
      markup
      </a>
      .
      </paragraph>
      </text>

- name: 'vrt-decode-tags: Multiple occurrences of an intra-word structure within one
    word'
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      <!-- #vrt structure-tag: i|24 encesofani ntra-words -->
      <!-- #vrt structure-tag: /i|27 esofanintr a-wordstru -->
      <!-- #vrt structure-tag: i|30 fanintra-w ordstructu -->
      <!-- #vrt structure-tag: /i|32 nintra-wor dstructure -->
      Multiple
      occurrences
      of
      an
      intra-word
      structure
      within
      one
      word
      .
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      Multiple
      occurrences
      of
      an
      <i struct_num="|1|2|" struct_charspan="|2-4|8-9|" struct_tokens="|ntr|or|" struct_tokens_all="|ntr|or|" struct_partnum="|1/1|" struct_continues="||">
      intra-word
      </i>
      structure
      within
      one
      word
      .
      </paragraph>
      </text>

- name: 'vrt-decode-tags: Occurrences of different intra-word structures within one
    word'
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      <!-- #vrt structure-tag: i|23 differenti ntra-words -->
      <!-- #vrt structure-tag: b|26 ferentintr a-wordstru -->
      <!-- #vrt structure-tag: /b|29 entintra-w ordstructu -->
      <!-- #vrt structure-tag: /i|31 tintra-wor dstructure -->
      Occurrences
      of
      different
      intra-word
      structures
      within
      one
      word
      .
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      Occurrences
      of
      different
      <i struct_num="|1|" struct_charspan="|2-9|" struct_tokens="|ntra-wor|" struct_tokens_all="|ntra-wor|" struct_partnum="|1/1|" struct_continues="||">
      <b struct_num="|2|" struct_charspan="|5-7|" struct_tokens="|a-w|" struct_tokens_all="|a-w|" struct_partnum="|1/1|" struct_continues="||">
      intra-word
      </b>
      </i>
      structures
      within
      one
      word
      .
      </paragraph>
      </text>

- name: 'vrt-decode-tags: Intra-word structure beginning within one word and ending
    within another'
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      <!-- #vrt structure-tag: i|35 ingwithino newordande -->
      <!-- #vrt structure-tag: /i|60 withinanot her. -->
      Intra-word
      structure
      beginning
      within
      one
      word
      and
      ending
      within
      another
      .
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      Intra-word
      structure
      beginning
      within
      <i struct_num="|1|" struct_charspan="|2-3|" struct_tokens="|ne|" struct_tokens_all="|ne word and ending within anot|" struct_partnum="|1/3|" struct_continues="|r|">
      one
      </i>
      <i struct_num="|1|" struct_charspan="|" struct_tokens="|word and ending within|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      word
      and
      ending
      within
      </i>
      <i struct_num="|1|" struct_charspan="|1-4|" struct_tokens="|anot|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      another
      </i>
      .
      </paragraph>
      </text>

- name: 'vrt-decode-tags: Structure both intra-word and whole words'
  status: >-
    xfail:Not implemented yet: if one attribute occurrence of a token
    has intra-word attributes, they all should have
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <text id="0">
      <paragraph id="1">
      <!-- #vrt structure-tag: i|17 recovering wholewords -->
      <!-- #vrt structure-tag: /i|27 wholewords andintra-w -->
      <!-- #vrt structure-tag: i|36 sandintra- word. -->
      <!-- #vrt structure-tag: /i|40 intra-word . -->
      Structure
      covering
      whole
      words
      and
      intra-word
      .
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text id="0">
      <paragraph id="1">
      Structure
      covering
      <i struct_num="|1|" struct_charspan="|" struct_tokens="|whole words|" struct_tokens_all="|whole words|" struct_partnum="|1/1|" struct_continues="||">
      whole
      words
      </i>
      and
      <i struct_num="|2|" struct_charspan="|7-10|" struct_tokens="|word|" struct_tokens_all="|word|" struct_partnum="|1/1|" struct_continues="||">
      intra-word
      </i>
      .
      </paragraph>
      </text>

- name: 'vrt-decode-tags: Paragraph break between structure start and end tag'
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <text>
      <!-- #vrt structure-tag: page n="1"|0   -->
      <paragraph>
      First
      paragraph.
      </paragraph>
      <paragraph>
      <!-- #vrt structure-tag: /page|15 dparagraph continueso -->
      <!-- #vrt structure-tag: page n="2"|15 dparagraph continueso -->
      Second
      paragraph
      continues
      on
      the
      next
      page.
      </paragraph>
      <!-- #vrt structure-tag: /page|0   -->
      </text>
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <text>
      <page n="1" struct_num="|1|">
      <paragraph>
      First
      paragraph.
      </paragraph>
      <paragraph>
      Second
      paragraph
      </page>
      <page n="2" struct_num="|2|">
      continues
      on
      the
      next
      page.
      </paragraph>
      </page>
      </text>

- name: 'vrt-decode-tags: Paragraph break between structure start and end tag;
    structure starts and ends in the middle of a token'
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <text>
      <paragraph>
      <!-- #vrt structure-tag: a x="x"|3 Fir stparagrap -->
      First paragraph.
      </paragraph>
      <paragraph>
      <!-- #vrt structure-tag: /a|11 econdparag raph. -->
      Second paragraph.
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: |
      vrt-decode-tags: Warning: Sub-token attributes not added to a structure that begins in the middle of a token but extends past a major structure boundary (typically paragraph or text): <a x="x" struct_num="|1|">
      vrt-decode-tags: Warning: Sub-token attributes not added to a structure that ends in the middle of a token but extends past a major structure boundary (typically paragraph or text): </a>
    stdout: |
      <text>
      <paragraph>
      <a x="x" struct_num="|1|">
      First paragraph.
      </paragraph>
      <paragraph>
      Second paragraph.
      </a>
      </paragraph>
      </text>

- name: 'vrt-decode-tags: Spurious start and end tag'
  input:
    prog: vrt-decode-tags
    stdin: |
      <text>
      <paragraph>
      <!-- #vrt structure-tag: a x="x"|5 First paragraph. -->
      First
      paragraph.
      </paragraph>
      <paragraph>
      <!-- #vrt structure-tag: /b|6 Second paragraph. -->
      Second
      paragraph.
      </paragraph>
      </text>
  output:
    returncode: 0
    stderr: |
      vrt-decode-tags: Warning: Spurious end tag: </b>
      vrt-decode-tags: Warning: Spurious start tag: <a x="x">
    stdout: |
      <text>
      <paragraph>
      First
      <a x="x" struct_num="|1|">
      paragraph.
      </paragraph>
      <paragraph>
      Second
      paragraph.
      </paragraph>
      </text>

- name: 'vrt-decode-tags: No enclosing structures'
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: i|0  abcd -->
      <!-- #vrt structure-tag: /i|4 abcd  -->
      abcd
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <i struct_num="|1|">
      abcd
      </i>

- name: 'vrt-decode-tags: XML comments in input'
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <text>
      <!-- #vrt structure-tag: !-- A comment before content --|0  abcdefghij -->
      <!-- #vrt structure-tag: i|0  abcdefghij -->
      <!-- #vrt structure-tag: !-- A comment before an end tag to be encoded --|2 ab cdefghijkl -->
      <!-- #vrt structure-tag: /i|2 ab cdefghijkl -->
      <!-- #vrt structure-tag: !-- A comment in the middle of content --|2 ab cdefghijkl -->
      <!-- #vrt structure-tag: i|2 ab cdefghijkl -->
      <!-- #vrt structure-tag: /i|4 abcd efghijkl -->
      <!-- #vrt structure-tag: !-- A comment containing a vertical bar: | --|4 abcd efghijkl -->
      <!-- #vrt structure-tag: !-- A comment containing nested markup: <a b="c">test</a> --|4 abcd efghijkl -->
      <!-- #vrt structure-tag: !-- A comment with a double hyphen -- in the middle --|4 abcd efghijkl -->
      <!-- #vrt structure-tag: !--A comment without a space at the beginning and end--|4 abcd efghijkl -->
      <!-- #vrt structure-tag: !--   A comment   with multiple spaces at   the beginning, middle and end   --|4 abcd efghijkl -->
      <!-- #vrt structure-tag: !-- A comment in the middle of a line --|6 abcdef ghijkl -->
      <!-- #vrt structure-tag: !-- An intra-word comment --|10 abcdefghij kl -->
      <!-- #vrt structure-tag: !-- A comment after content --|12 cdefghijkl  -->
      ab
      cd
      ef
      gh
      ijkl
      </text>
  output:
    returncode: 0
    stderr: ""
    # Note that the comment before an end tag to be encoded comes
    # after the tag because it would be more complicated to keep the
    # order when nearest open structures are closed first.
    stdout: |
      <text>
      <!-- A comment before content -->
      <i struct_num="|1|">
      ab
      </i>
      <!-- A comment before an end tag to be encoded -->
      <!-- A comment in the middle of content -->
      <i struct_num="|2|">
      cd
      </i>
      <!-- A comment containing a vertical bar: | -->
      <!-- A comment containing nested markup: <a b="c">test</a> -->
      <!-- A comment with a double hyphen -- in the middle -->
      <!--A comment without a space at the beginning and end-->
      <!--   A comment   with multiple spaces at   the beginning, middle and end   -->
      ef
      <!-- A comment in the middle of a line -->
      gh
      <!-- An intra-word comment -->
      ijkl
      <!-- A comment after content -->
      </text>

- name: 'vrt-decode-tags: Structure ends at the middle of a token: <i>abcdef</i>ghi'
  # hrt-encode-tags input: <i>abcdef</i>ghi
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: i|0  abcdefghi -->
      <!-- #vrt structure-tag: /i|6 abcdef ghi -->
      abcdefghi
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <i struct_num="|1|" struct_charspan="|1-6|" struct_tokens="|abcdef|" struct_tokens_all="|abcdef|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghi
      </i>

- name: 'vrt-decode-tags: Structure starts at the middle of a token: abc<i>defghi</i>'
  # hrt-encode-tags input: abc<i>defghi</i>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: i|3 abc defghi -->
      <!-- #vrt structure-tag: /i|9 abcdefghi  -->
      abcdefghi
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <i struct_num="|1|" struct_charspan="|4-9|" struct_tokens="|defghi|" struct_tokens_all="|defghi|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghi
      </i>

- name: 'vrt-decode-tags: Structure starts and ends at the middle of a token: abc<i>def</i>jkl'
  # hrt-encode-tags input: abc<i>def</i>jkl
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: i|3 abc defjkl -->
      <!-- #vrt structure-tag: /i|6 abcdef jkl -->
      abcdefjkl
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <i struct_num="|1|" struct_charspan="|4-6|" struct_tokens="|def|" struct_tokens_all="|def|" struct_partnum="|1/1|" struct_continues="||">
      abcdefjkl
      </i>

- name: 'vrt-decode-tags: Multiple same structures in the same token: a<a>b</a>cde<a>fghi</a><a>jkl</a>mn'
  # hrt-encode-tags input: a<a>b</a>cde<a>fghi</a><a>jkl</a>mn
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|2 ab cdefghijkl -->
      <!-- #vrt structure-tag: a|5 abcde fghijklmn -->
      <!-- #vrt structure-tag: /a|9 abcdefghi jklmn -->
      <!-- #vrt structure-tag: a|9 abcdefghi jklmn -->
      <!-- #vrt structure-tag: /a|12 cdefghijkl mn -->
      abcdefghijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|2|3|" struct_charspan="|2-2|6-9|10-12|" struct_tokens="|b|fghi|jkl|" struct_tokens_all="|b|fghi|jkl|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghijklmn
      </a>

- name: 'vrt-decode-tags: Multiple same structures in the same token, one containing
    the end of one and beginning of the next token: a<a>b</a>cde<a>fg hi</a><a>jkl</a>mn'
  # hrt-encode-tags input: a<a>b</a>cde<a>fg hi</a><a>jkl</a>mn
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|2 ab cdefghijkl -->
      <!-- #vrt structure-tag: a|5 abcde fghijklmn -->
      <!-- #vrt structure-tag: /a|9 abcdefghi jklmn -->
      <!-- #vrt structure-tag: a|9 abcdefghi jklmn -->
      <!-- #vrt structure-tag: /a|12 cdefghijkl mn -->
      abcdefg
      hijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|2|" struct_charspan="|2-2|6-7|" struct_tokens="|b|fg|" struct_tokens_all="|b|fg hi|" struct_partnum="|1/1|1/2|" struct_continues="||r|">
      abcdefg
      </a>
      <a struct_num="|2|3|" struct_charspan="|1-2|3-5|" struct_tokens="|hi|jkl|" struct_tokens_all="||jkl|" struct_partnum="|2/2|1/1|" struct_continues="|l||">
      hijklmn
      </a>

- name: 'vrt-decode-tags: Multiple same structures in the same token, one containing
    the end of one and beginning of the next token, with one token in between: a<a>b</a>cde<a>fg
    h i</a><a>jkl</a>mn'
  # hrt-encode-tags input: a<a>b</a>cde<a>fg h i</a><a>jkl</a>mn
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|2 ab cdefghijkl -->
      <!-- #vrt structure-tag: a|5 abcde fghijklmn -->
      <!-- #vrt structure-tag: /a|9 abcdefghi jklmn -->
      <!-- #vrt structure-tag: a|9 abcdefghi jklmn -->
      <!-- #vrt structure-tag: /a|12 cdefghijkl mn -->
      abcdefg
      h
      ijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|2|" struct_charspan="|2-2|6-7|" struct_tokens="|b|fg|" struct_tokens_all="|b|fg h i|" struct_partnum="|1/1|1/3|" struct_continues="||r|">
      abcdefg
      </a>
      <a struct_num="|2|" struct_charspan="|" struct_tokens="|h|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      h
      </a>
      <a struct_num="|2|3|" struct_charspan="|1-1|2-4|" struct_tokens="|i|jkl|" struct_tokens_all="||jkl|" struct_partnum="|3/3|1/1|" struct_continues="|l||">
      ijklmn
      </a>

- name: 'vrt-decode-tags: Intra-word structures: a<a>b</a>cde <a>fghjkl</a>mn'
  # hrt-encode-tags input: a<a>b</a>cde <a>fghjkl</a>mn
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghjkl -->
      <!-- #vrt structure-tag: /a|2 ab cdefghjklm -->
      <!-- #vrt structure-tag: a|5 abcde fghjklmn -->
      <!-- #vrt structure-tag: /a|11 bcdefghjkl mn -->
      abcde
      fghjklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-2|" struct_tokens="|b|" struct_tokens_all="|b|" struct_partnum="|1/1|" struct_continues="||">
      abcde
      </a>
      <a struct_num="|2|" struct_charspan="|1-6|" struct_tokens="|fghjkl|" struct_tokens_all="|fghjkl|" struct_partnum="|1/1|" struct_continues="||">
      fghjklmn
      </a>

- name: 'vrt-decode-tags: Different intra-word structures in the same token: a<a>bc</a>defg<b>hijkl</b>mn'
  # hrt-encode-tags input: a<a>bc</a>defg<b>hijkl</b>mn
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|3 abc defghijklm -->
      <!-- #vrt structure-tag: b|7 abcdefg hijklmn -->
      <!-- #vrt structure-tag: /b|12 cdefghijkl mn -->
      abcdefghijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-3|" struct_tokens="|bc|" struct_tokens_all="|bc|" struct_partnum="|1/1|" struct_continues="||">
      <b struct_num="|2|" struct_charspan="|8-12|" struct_tokens="|hijkl|" struct_tokens_all="|hijkl|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghijklmn
      </b>
      </a>

- name: 'vrt-decode-tags: Different intra-word structures in the same token, token
    break within one strcture: a<a>bc</a>defg<b>hij kl</b>mn'
  # hrt-encode-tags input: a<a>bc</a>defg<b>hij kl</b>mn
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|3 abc defghijklm -->
      <!-- #vrt structure-tag: b|7 abcdefg hijklmn -->
      <!-- #vrt structure-tag: /b|12 cdefghijkl mn -->
      abcdefghij
      klmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-3|" struct_tokens="|bc|" struct_tokens_all="|bc|" struct_partnum="|1/1|" struct_continues="||">
      <b struct_num="|2|" struct_charspan="|8-10|" struct_tokens="|hij|" struct_tokens_all="|hij kl|" struct_partnum="|1/2|" struct_continues="|r|">
      abcdefghij
      </b>
      </a>
      <b struct_num="|2|" struct_charspan="|1-2|" struct_tokens="|kl|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      klmn
      </b>

- name: 'vrt-decode-tags: Different intra-word structures in the same token, structure
    ends at token break: a<a>bc</a>defg<b>hij</b> klmn'
  # hrt-encode-tags input: a<a>bc</a>defg<b>hij</b> klmn
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|3 abc defghijklm -->
      <!-- #vrt structure-tag: b|7 abcdefg hijklmn -->
      <!-- #vrt structure-tag: /b|10 abcdefghij klmn -->
      abcdefghij
      klmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-3|" struct_tokens="|bc|" struct_tokens_all="|bc|" struct_partnum="|1/1|" struct_continues="||">
      <b struct_num="|2|" struct_charspan="|8-10|" struct_tokens="|hij|" struct_tokens_all="|hij|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghij
      </b>
      </a>
      klmn

- name: 'vrt-decode-tags: Nested different structures: <a>abcd <b>efgh</b> ijklmn</a>'
  # hrt-encode-tags input: <a>abcd <b>efgh</b> ijklmn</a>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|0  abcdefghij -->
      <!-- #vrt structure-tag: b|4 abcd efghijklmn -->
      <!-- #vrt structure-tag: /b|8 abcdefgh ijklmn -->
      <!-- #vrt structure-tag: /a|14 efghijklmn  -->
      abcd
      efgh
      ijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|">
      abcd
      <b struct_num="|2|">
      efgh
      </b>
      ijklmn
      </a>

- name: 'vrt-decode-tags: Nested same structures: <a>abcd <a>efgh</a> ijklmn</a>'
  # hrt-encode-tags input: <a>abcd <a>efgh</a> ijklmn</a>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|0  abcdefghij -->
      <!-- #vrt structure-tag: a|4 abcd efghijklmn -->
      <!-- #vrt structure-tag: /a|8 abcdefgh ijklmn -->
      <!-- #vrt structure-tag: /a|14 efghijklmn  -->
      abcd
      efgh
      ijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|">
      abcd
      <a struct_num="|2|">
      efgh
      </a>
      ijklmn
      </a>

- name: 'vrt-decode-tags: Interleaved structures: <a>abcd <b>efgh</a> ijklmn</b>'
  # hrt-encode-tags input: <a>abcd <b>efgh</a> ijklmn</b>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|0  abcdefghij -->
      <!-- #vrt structure-tag: b|4 abcd efghijklmn -->
      <!-- #vrt structure-tag: /a|8 abcdefgh ijklmn -->
      <!-- #vrt structure-tag: /b|14 efghijklmn  -->
      abcd
      efgh
      ijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|">
      abcd
      <b struct_num="|2|">
      efgh
      </a>
      ijklmn
      </b>

- name: 'vrt-decode-tags: Nested and interleaved structures: <a>ab <b>cd</b> <b>efgh</a>
    ijklmn</b>'
  # hrt-encode-tags input: <a>ab <b>cd</b> <b>efgh</a> ijklmn</b>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|0  abcdefghij -->
      <!-- #vrt structure-tag: b|2 ab cdefghijkl -->
      <!-- #vrt structure-tag: /b|4 abcd efghijklmn -->
      <!-- #vrt structure-tag: b|4 abcd efghijklmn -->
      <!-- #vrt structure-tag: /a|8 abcdefgh ijklmn -->
      <!-- #vrt structure-tag: /b|14 efghijklmn  -->
      ab
      cd
      efgh
      ijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|">
      ab
      <b struct_num="|2|">
      cd
      </b>
      <b struct_num="|3|">
      efgh
      </a>
      ijklmn
      </b>

- name: 'vrt-decode-tags: Nested different structures, nested structure beginning
    within a token: a<a>bc<b>defghij</b> klm</a>n'
  # hrt-encode-tags input: a<a>bc<b>defghij</b> klm</a>n
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b|3 abc defghijklm -->
      <!-- #vrt structure-tag: /b|10 abcdefghij klmn -->
      <!-- #vrt structure-tag: /a|13 defghijklm n -->
      abcdefghij
      klmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-10|" struct_tokens="|bcdefghij|" struct_tokens_all="|bcdefghij klm|" struct_partnum="|1/2|" struct_continues="|r|">
      <b struct_num="|2|" struct_charspan="|4-10|" struct_tokens="|defghij|" struct_tokens_all="|defghij|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghij
      </b>
      </a>
      <a struct_num="|1|" struct_charspan="|1-3|" struct_tokens="|klm|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      klmn
      </a>

- name: 'vrt-decode-tags: Interleaved different structures, interleaved structure
    beginning within a token: a<a>bc<b>defghij</a> klm</b>n'
  # hrt-encode-tags input: a<a>bc<b>defghij</a> klm</b>n
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b|3 abc defghijklm -->
      <!-- #vrt structure-tag: /a|10 abcdefghij klmn -->
      <!-- #vrt structure-tag: /b|13 defghijklm n -->
      abcdefghij
      klmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-10|" struct_tokens="|bcdefghij|" struct_tokens_all="|bcdefghij|" struct_partnum="|1/1|" struct_continues="||">
      <b struct_num="|2|" struct_charspan="|4-10|" struct_tokens="|defghij|" struct_tokens_all="|defghij klm|" struct_partnum="|1/2|" struct_continues="|r|">
      abcdefghij
      </b>
      </a>
      <b struct_num="|2|" struct_charspan="|1-3|" struct_tokens="|klm|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      klmn
      </b>

- name: 'vrt-decode-tags: Nested same structures within a token: a<a>bc<a>defghij</a>klm</a>n'
  # hrt-encode-tags input: a<a>bc<a>defghij</a>klm</a>n
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: a|3 abc defghijklm -->
      <!-- #vrt structure-tag: /a|10 abcdefghij klmn -->
      <!-- #vrt structure-tag: /a|13 defghijklm n -->
      abcdefghijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|2|" struct_charspan="|2-13|4-10|" struct_tokens="|bcdefghijklm|defghij|" struct_tokens_all="|bcdefghijklm|defghij|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghijklmn
      </a>

- name: 'vrt-decode-tags: Nested same intra-token structures, with a token break:
    a<a>bc<a>de fghij</a>klm</a>n'
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: a|3 abc defghijklm -->
      <!-- #vrt structure-tag: /a|10 abcdefghij klmn -->
      <!-- #vrt structure-tag: /a|13 defghijklm n -->
      abcde
      fghijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|2|" struct_charspan="|2-5|4-5|" struct_tokens="|bcde|de|" struct_tokens_all="|bcde fghijklm|de fghij|" struct_partnum="|1/2|" struct_continues="|r|">
      abcde
      </a>
      <a struct_num="|1|2|" struct_charspan="|1-8|1-5|" struct_tokens="|fghijklm|fghij|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      fghijklmn
      </a>

- name: 'vrt-decode-tags: Nested same intra-token structures, with two token breaks:
    a<a>bc<a>de fgh ij</a>klm</a>n'
  # hrt-encode-tags input: a<a>bc<a>de fgh ij</a>klm</a>n
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: a|3 abc defghijklm -->
      <!-- #vrt structure-tag: /a|10 abcdefghij klmn -->
      <!-- #vrt structure-tag: /a|13 defghijklm n -->
      abcde
      fgh
      ijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|2|" struct_charspan="|2-5|4-5|" struct_tokens="|bcde|de|" struct_tokens_all="|bcde fgh ijklm|de fgh ij|" struct_partnum="|1/3|" struct_continues="|r|">
      abcde
      </a>
      <a struct_num="|1|2|" struct_charspan="|" struct_tokens="|fgh|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      fgh
      </a>
      <a struct_num="|1|2|" struct_charspan="|1-5|1-2|" struct_tokens="|ijklm|ij|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      ijklmn
      </a>

- name: 'vrt-decode-tags: Nested different structures within a token: a<a>bc<b>defghij</b>klm</a>n'
  # hrt-encode-tags input: a<a>bc<b>defghij</b>klm</a>n
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b|3 abc defghijklm -->
      <!-- #vrt structure-tag: /b|10 abcdefghij klmn -->
      <!-- #vrt structure-tag: /a|13 defghijklm n -->
      abcdefghijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-13|" struct_tokens="|bcdefghijklm|" struct_tokens_all="|bcdefghijklm|" struct_partnum="|1/1|" struct_continues="||">
      <b struct_num="|2|" struct_charspan="|4-10|" struct_tokens="|defghij|" struct_tokens_all="|defghij|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghijklmn
      </b>
      </a>

- name: 'vrt-decode-tags: Nested different intra-token structures, with a token break:
    a<a>bc<b>de fghij</b>klm</a>n'
  # hrt-encode-tags input: a<a>bc<b>de fghij</b>klm</a>n
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b|3 abc defghijklm -->
      <!-- #vrt structure-tag: /b|10 abcdefghij klmn -->
      <!-- #vrt structure-tag: /a|13 defghijklm n -->
      abcde
      fghijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-5|" struct_tokens="|bcde|" struct_tokens_all="|bcde fghijklm|" struct_partnum="|1/2|" struct_continues="|r|">
      <b struct_num="|2|" struct_charspan="|4-5|" struct_tokens="|de|" struct_tokens_all="|de fghij|" struct_partnum="|1/2|" struct_continues="|r|">
      abcde
      </b>
      </a>
      <a struct_num="|1|" struct_charspan="|1-8|" struct_tokens="|fghijklm|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      <b struct_num="|2|" struct_charspan="|1-5|" struct_tokens="|fghij|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      fghijklmn
      </b>
      </a>

- name: 'vrt-decode-tags: Nested different intra-token structures, with two token
    breaks: a<a>bc<b>de fgh ij</b>klm</a>n'
  # hrt-encode-tags input: a<a>bc<b>de fgh ij</b>klm</a>n
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b|3 abc defghijklm -->
      <!-- #vrt structure-tag: /b|10 abcdefghij klmn -->
      <!-- #vrt structure-tag: /a|13 defghijklm n -->
      abcde
      fgh
      ijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-5|" struct_tokens="|bcde|" struct_tokens_all="|bcde fgh ijklm|" struct_partnum="|1/3|" struct_continues="|r|">
      <b struct_num="|2|" struct_charspan="|4-5|" struct_tokens="|de|" struct_tokens_all="|de fgh ij|" struct_partnum="|1/3|" struct_continues="|r|">
      abcde
      </b>
      </a>
      <a struct_num="|1|" struct_charspan="|" struct_tokens="|fgh|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      <b struct_num="|2|" struct_charspan="|" struct_tokens="|fgh|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      fgh
      </b>
      </a>
      <a struct_num="|1|" struct_charspan="|1-5|" struct_tokens="|ijklm|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      <b struct_num="|2|" struct_charspan="|1-2|" struct_tokens="|ij|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      ijklmn
      </b>
      </a>

- name: 'vrt-decode-tags: Interleaved structures within a token: a<a>bc<b>defghij</a>klm</b>n'
  # hrt-encode-tags input: a<a>bc<b>defghij</a>klm</b>n
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b|3 abc defghijklm -->
      <!-- #vrt structure-tag: /a|10 abcdefghij klmn -->
      <!-- #vrt structure-tag: /b|13 defghijklm n -->
      abcdefghijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-10|" struct_tokens="|bcdefghij|" struct_tokens_all="|bcdefghij|" struct_partnum="|1/1|" struct_continues="||">
      <b struct_num="|2|" struct_charspan="|4-13|" struct_tokens="|defghijklm|" struct_tokens_all="|defghijklm|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghijklmn
      </b>
      </a>

- name: 'vrt-decode-tags: Interleaved structures within a token, with a token break:
    a<a>bc<b>de fghij</a>klm</b>n'
  # hrt-encode-tags input: a<a>bc<b>de fghij</a>klm</b>n
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b|3 abc defghijklm -->
      <!-- #vrt structure-tag: /a|10 abcdefghij klmn -->
      <!-- #vrt structure-tag: /b|13 defghijklm n -->
      abcde
      fghijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-5|" struct_tokens="|bcde|" struct_tokens_all="|bcde fghij|" struct_partnum="|1/2|" struct_continues="|r|">
      <b struct_num="|2|" struct_charspan="|4-5|" struct_tokens="|de|" struct_tokens_all="|de fghijklm|" struct_partnum="|1/2|" struct_continues="|r|">
      abcde
      </b>
      </a>
      <a struct_num="|1|" struct_charspan="|1-5|" struct_tokens="|fghij|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      <b struct_num="|2|" struct_charspan="|1-8|" struct_tokens="|fghijklm|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      fghijklmn
      </b>
      </a>

- name: 'vrt-decode-tags: Interleaved structures within a token, with two token breaks:
    a<a>bc<b>de fgh ij</a>klm</b>n'
  # hrt-encode-tags input: a<a>bc<b>de fgh ij</a>klm</b>n
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b|3 abc defghijklm -->
      <!-- #vrt structure-tag: /a|10 abcdefghij klmn -->
      <!-- #vrt structure-tag: /b|13 defghijklm n -->
      abcde
      fgh
      ijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-5|" struct_tokens="|bcde|" struct_tokens_all="|bcde fgh ij|" struct_partnum="|1/3|" struct_continues="|r|">
      <b struct_num="|2|" struct_charspan="|4-5|" struct_tokens="|de|" struct_tokens_all="|de fgh ijklm|" struct_partnum="|1/3|" struct_continues="|r|">
      abcde
      </b>
      </a>
      <a struct_num="|1|" struct_charspan="|" struct_tokens="|fgh|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      <b struct_num="|2|" struct_charspan="|" struct_tokens="|fgh|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      fgh
      </b>
      </a>
      <a struct_num="|1|" struct_charspan="|1-2|" struct_tokens="|ij|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      <b struct_num="|2|" struct_charspan="|1-5|" struct_tokens="|ijklm|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      ijklmn
      </b>
      </a>

- name: 'vrt-decode-tags: Nested and interleaved structures within a token: a<a>bc<b>de</b>fg<b>hi</a>jk</b>lmn'
  # hrt-encode-tags input: a<a>bc<b>de</b>fg<b>hi</a>jk</b>lmn
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b|3 abc defghijklm -->
      <!-- #vrt structure-tag: /b|5 abcde fghijklmn -->
      <!-- #vrt structure-tag: b|7 abcdefg hijklmn -->
      <!-- #vrt structure-tag: /a|9 abcdefghi jklmn -->
      <!-- #vrt structure-tag: /b|11 bcdefghijk lmn -->
      abcdefghijklmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-9|" struct_tokens="|bcdefghi|" struct_tokens_all="|bcdefghi|" struct_partnum="|1/1|" struct_continues="||">
      <b struct_num="|2|3|" struct_charspan="|4-5|8-11|" struct_tokens="|de|hijk|" struct_tokens_all="|de|hijk|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghijklmn
      </b>
      </a>

- name: 'vrt-decode-tags: Nested and interleaved structures within a token, with a
    token break: a<a>b c<b>d e</b>f g<b>h i</a>j k</b>lmn'
  # hrt-encode-tags input: a<a>b c<b>d e</b>f g<b>h i</a>j k</b>lmn
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b|3 abc defghijklm -->
      <!-- #vrt structure-tag: /b|5 abcde fghijklmn -->
      <!-- #vrt structure-tag: b|7 abcdefg hijklmn -->
      <!-- #vrt structure-tag: /a|9 abcdefghi jklmn -->
      <!-- #vrt structure-tag: /b|11 bcdefghijk lmn -->
      ab
      cd
      ef
      gh
      ij
      klmn
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-2|" struct_tokens="|b|" struct_tokens_all="|b cd ef gh i|" struct_partnum="|1/3|" struct_continues="|r|">
      ab
      </a>
      <a struct_num="|1|" struct_charspan="|" struct_tokens="|cd ef gh|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      <b struct_num="|2|" struct_charspan="|2-2|" struct_tokens="|d|" struct_tokens_all="|d e|" struct_partnum="|1/2|" struct_continues="|r|">
      cd
      </b>
      <b struct_num="|2|" struct_charspan="|1-1|" struct_tokens="|e|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      ef
      </b>
      <b struct_num="|3|" struct_charspan="|2-2|" struct_tokens="|h|" struct_tokens_all="|h ij k|" struct_partnum="|1/3|" struct_continues="|r|">
      gh
      </b>
      </a>
      <a struct_num="|1|" struct_charspan="|1-1|" struct_tokens="|i|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      <b struct_num="|3|" struct_charspan="|" struct_tokens="|ij|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      ij
      </b>
      </a>
      <b struct_num="|3|" struct_charspan="|1-1|" struct_tokens="|k|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      klmn
      </b>

- name: 'vrt-decode-tags: Nested and interleaved structures within a token, with two
    token breaks: a<a>b c d<b>e f g</b>h i j<b>k l m</a>n o p</b>q'
  # hrt-encode-tags input: a<a>b c d<b>e f g</b>h i j<b>k l m</a>n o p</b>q
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b|4 abcd efghijklmn -->
      <!-- #vrt structure-tag: /b|7 abcdefg hijklmnopq -->
      <!-- #vrt structure-tag: b|10 abcdefghij klmnopq -->
      <!-- #vrt structure-tag: /a|13 defghijklm nopq -->
      <!-- #vrt structure-tag: /b|16 ghijklmnop q -->
      ab
      c
      de
      f
      gh
      i
      jk
      l
      mn
      o
      pq
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-2|" struct_tokens="|b|" struct_tokens_all="|b c de f gh i jk l m|" struct_partnum="|1/3|" struct_continues="|r|">
      ab
      </a>
      <a struct_num="|1|" struct_charspan="|" struct_tokens="|c de f gh i jk l|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      c
      <b struct_num="|2|" struct_charspan="|2-2|" struct_tokens="|e|" struct_tokens_all="|e f g|" struct_partnum="|1/3|" struct_continues="|r|">
      de
      </b>
      <b struct_num="|2|" struct_charspan="|" struct_tokens="|f|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      f
      </b>
      <b struct_num="|2|" struct_charspan="|1-1|" struct_tokens="|g|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      gh
      </b>
      i
      <b struct_num="|3|" struct_charspan="|2-2|" struct_tokens="|k|" struct_tokens_all="|k l mn o p|" struct_partnum="|1/3|" struct_continues="|r|">
      jk
      </b>
      <b struct_num="|3|" struct_charspan="|" struct_tokens="|l mn o|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      l
      </a>
      <a struct_num="|1|" struct_charspan="|1-1|" struct_tokens="|m|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      mn
      </a>
      o
      </b>
      <b struct_num="|3|" struct_charspan="|1-1|" struct_tokens="|p|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      pq
      </b>

- name: 'vrt-decode-tags: Three interleaved structures within a token: a<a>bcd<b>efg<c>hij</a>klm</b>nop</c>q'
  # hrt-encode-tags input: a<a>bcd<b>efg<c>hij</a>klm</b>nop</c>q
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b|4 abcd efghijklmn -->
      <!-- #vrt structure-tag: c|7 abcdefg hijklmnopq -->
      <!-- #vrt structure-tag: /a|10 abcdefghij klmnopq -->
      <!-- #vrt structure-tag: /b|13 defghijklm nopq -->
      <!-- #vrt structure-tag: /c|16 ghijklmnop q -->
      abcdefghijklmnopq
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-10|" struct_tokens="|bcdefghij|" struct_tokens_all="|bcdefghij|" struct_partnum="|1/1|" struct_continues="||">
      <b struct_num="|2|" struct_charspan="|5-13|" struct_tokens="|efghijklm|" struct_tokens_all="|efghijklm|" struct_partnum="|1/1|" struct_continues="||">
      <c struct_num="|3|" struct_charspan="|8-16|" struct_tokens="|hijklmnop|" struct_tokens_all="|hijklmnop|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghijklmnopq
      </c>
      </b>
      </a>

- name: 'vrt-decode-tags: Three interleaved structures, with two token breaks: a<a>b
    c d<b>e f g<c>h i j</a>k l m</b>n o p</c>q'
  # hrt-encode-tags input: a<a>b c d<b>e f g<c>h i j</a>k l m</b>n o p</c>q
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b|4 abcd efghijklmn -->
      <!-- #vrt structure-tag: c|7 abcdefg hijklmnopq -->
      <!-- #vrt structure-tag: /a|10 abcdefghij klmnopq -->
      <!-- #vrt structure-tag: /b|13 defghijklm nopq -->
      <!-- #vrt structure-tag: /c|16 ghijklmnop q -->
      ab
      c
      de
      f
      gh
      i
      jk
      l
      mn
      o
      pq
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|2-2|" struct_tokens="|b|" struct_tokens_all="|b c de f gh i j|" struct_partnum="|1/3|" struct_continues="|r|">
      ab
      </a>
      <a struct_num="|1|" struct_charspan="|" struct_tokens="|c de f gh i|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      c
      <b struct_num="|2|" struct_charspan="|2-2|" struct_tokens="|e|" struct_tokens_all="|e f gh i jk l m|" struct_partnum="|1/3|" struct_continues="|r|">
      de
      </b>
      <b struct_num="|2|" struct_charspan="|" struct_tokens="|f gh i jk l|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      f
      <c struct_num="|3|" struct_charspan="|2-2|" struct_tokens="|h|" struct_tokens_all="|h i jk l mn o p|" struct_partnum="|1/3|" struct_continues="|r|">
      gh
      </c>
      <c struct_num="|3|" struct_charspan="|" struct_tokens="|i jk l mn o|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      i
      </a>
      <a struct_num="|1|" struct_charspan="|1-1|" struct_tokens="|j|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      jk
      </a>
      l
      </b>
      <b struct_num="|2|" struct_charspan="|1-1|" struct_tokens="|m|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      mn
      </b>
      o
      </c>
      <c struct_num="|3|" struct_charspan="|1-1|" struct_tokens="|p|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      pq
      </c>

- name: 'vrt-decode-tags: Intra-word structure with an attribute 1: a<a b="1">b c</a>d
    ef'
  # hrt-encode-tags input: a<a b="1">b c</a>d ef
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a b="1"|1 a bcdef -->
      <!-- #vrt structure-tag: /a|3 abc def -->
      ab
      cd
      ef
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a b="1" struct_num="|1|" struct_charspan="|2-2|" struct_tokens="|b|" struct_tokens_all="|b c|" struct_partnum="|1/2|" struct_continues="|r|">
      ab
      </a>
      <a b="1" struct_num="|1|" struct_charspan="|1-1|" struct_tokens="|c|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      cd
      </a>
      ef

- name: 'vrt-decode-tags: Intra-word structure with an attribute 2: a<a b="1">b cde
    fgh</a>i jkl'
  # hrt-encode-tags input: a<a b="1">b cde fgh</a>i jkl
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a b="1"|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|8 abcdefgh ijkl -->
      ab
      cde
      fghi
      jkl
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a b="1" struct_num="|1|" struct_charspan="|2-2|" struct_tokens="|b|" struct_tokens_all="|b cde fgh|" struct_partnum="|1/3|" struct_continues="|r|">
      ab
      </a>
      <a b="1" struct_num="|1|" struct_charspan="|" struct_tokens="|cde|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      cde
      </a>
      <a b="1" struct_num="|1|" struct_charspan="|1-3|" struct_tokens="|fgh|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      fghi
      </a>
      jkl

- name: 'vrt-decode-tags: Intra-word structure with an attribute 3: a<a b="1">b cde
    fghi</a> jkl'
  # hrt-encode-tags input: a<a b="1">b cde fghi</a> jkl
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a b="1"|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|9 abcdefghi jkl -->
      ab
      cde
      fghi
      jkl
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a b="1" struct_num="|1|" struct_charspan="|2-2|" struct_tokens="|b|" struct_tokens_all="|b cde fghi|" struct_partnum="|1/2|" struct_continues="|r|">
      ab
      </a>
      <a b="1" struct_num="|1|" struct_charspan="|" struct_tokens="|cde fghi|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      cde
      fghi
      </a>
      jkl

- name: 'vrt-decode-tags: Intra-word structure with an attribute 4: <a b="1">ab cde
    fgh</a>i jkl'
  # hrt-encode-tags input: <a b="1">ab cde fgh</a>i jkl
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a b="1"|0  abcdefghij -->
      <!-- #vrt structure-tag: /a|8 abcdefgh ijkl -->
      ab
      cde
      fghi
      jkl
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a b="1" struct_num="|1|" struct_charspan="|" struct_tokens="|ab cde|" struct_tokens_all="|ab cde fgh|" struct_partnum="|1/2|" struct_continues="|r|">
      ab
      cde
      </a>
      <a b="1" struct_num="|1|" struct_charspan="|1-3|" struct_tokens="|fgh|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      fghi
      </a>
      jkl

- name: 'vrt-decode-tags: Same intra-word structures with same values for an attribute:
    a<a x="x">bcdefg</a>h<a x="x">ijklmn</a>o<a x="x">pqrstu</a>v'
  # hrt-encode-tags input: a<a x="x">bcdefg</a>h<a x="x">ijklmn</a>o<a x="x">pqrstu</a>v
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x"|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|7 abcdefg hijklmnopq -->
      <!-- #vrt structure-tag: a x="x"|8 abcdefgh ijklmnopqr -->
      <!-- #vrt structure-tag: /a|14 efghijklmn opqrstuv -->
      <!-- #vrt structure-tag: a x="x"|15 fghijklmno pqrstuv -->
      <!-- #vrt structure-tag: /a|21 lmnopqrstu v -->
      abcdefghijklmnopqrstuv
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a x="x" struct_num="|1|2|3|" struct_charspan="|2-7|9-14|16-21|" struct_tokens="|bcdefg|ijklmn|pqrstu|" struct_tokens_all="|bcdefg|ijklmn|pqrstu|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghijklmnopqrstuv
      </a>

- name: 'vrt-decode-tags: Same intra-word structures with different values for an
    attribute: a<a x="x1">bcdefg</a>h<a x="x2">ijklmn</a>o<a x="x3">pqrstu</a>v'
  # hrt-encode-tags input: a<a x="x1">bcdefg</a>h<a x="x2">ijklmn</a>o<a x="x3">pqrstu</a>v
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x1"|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|7 abcdefg hijklmnopq -->
      <!-- #vrt structure-tag: a x="x2"|8 abcdefgh ijklmnopqr -->
      <!-- #vrt structure-tag: /a|14 efghijklmn opqrstuv -->
      <!-- #vrt structure-tag: a x="x3"|15 fghijklmno pqrstuv -->
      <!-- #vrt structure-tag: /a|21 lmnopqrstu v -->
      abcdefghijklmnopqrstuv
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a x="|x1|x2|x3|" struct_num="|1|2|3|" struct_charspan="|2-7|9-14|16-21|" struct_tokens="|bcdefg|ijklmn|pqrstu|" struct_tokens_all="|bcdefg|ijklmn|pqrstu|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghijklmnopqrstuv
      </a>

- name: 'vrt-decode-tags: Same intra-word structures with different values for an
    attribute, with a token break: a<a x="x1">bc defg</a>h<a x="x2">ij klmn</a>o<a
    x="x3">pq rstu</a>v'
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x1"|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|7 abcdefg hijklmnopq -->
      <!-- #vrt structure-tag: a x="x2"|8 abcdefgh ijklmnopqr -->
      <!-- #vrt structure-tag: /a|14 efghijklmn opqrstuv -->
      <!-- #vrt structure-tag: a x="x3"|15 fghijklmno pqrstuv -->
      <!-- #vrt structure-tag: /a|21 lmnopqrstu v -->
      abc
      defghij
      klmnopq
      rstuv
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a x="|x1|" struct_num="|1|" struct_charspan="|2-3|" struct_tokens="|bc|" struct_tokens_all="|bc defg|" struct_partnum="|1/2|" struct_continues="|r|">
      abc
      </a>
      <a x="|x1|x2|" struct_num="|1|2|" struct_charspan="|1-4|6-7|" struct_tokens="|defg|ij|" struct_tokens_all="||ij klmn|" struct_partnum="|2/2|1/2|" struct_continues="|l|r|">
      defghij
      </a>
      <a x="|x2|x3|" struct_num="|2|3|" struct_charspan="|1-4|6-7|" struct_tokens="|klmn|pq|" struct_tokens_all="||pq rstu|" struct_partnum="|2/2|1/2|" struct_continues="|l|r|">
      klmnopq
      </a>
      <a x="|x3|" struct_num="|3|" struct_charspan="|1-4|" struct_tokens="|rstu|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      rstuv
      </a>

- name: 'vrt-decode-tags: Same intra-word structures with different values for an
    attribute, with two token breaks: a<a x="x1">bc de fg</a>h<a x="x2">ij kl mn</a>o<a
    x="x3">pq rs tu</a>v'
  # hrt-encode-tags input: a<a x="x1">bc de fg</a>h<a x="x2">ij kl mn</a>o<a x="x3">pq rs tu</a>v
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x1"|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|7 abcdefg hijklmnopq -->
      <!-- #vrt structure-tag: a x="x2"|8 abcdefgh ijklmnopqr -->
      <!-- #vrt structure-tag: /a|14 efghijklmn opqrstuv -->
      <!-- #vrt structure-tag: a x="x3"|15 fghijklmno pqrstuv -->
      <!-- #vrt structure-tag: /a|21 lmnopqrstu v -->
      abc
      de
      fghij
      kl
      mnopq
      rs
      tuv
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a x="|x1|" struct_num="|1|" struct_charspan="|2-3|" struct_tokens="|bc|" struct_tokens_all="|bc de fg|" struct_partnum="|1/3|" struct_continues="|r|">
      abc
      </a>
      <a x="|x1|" struct_num="|1|" struct_charspan="|" struct_tokens="|de|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      de
      </a>
      <a x="|x1|x2|" struct_num="|1|2|" struct_charspan="|1-2|4-5|" struct_tokens="|fg|ij|" struct_tokens_all="||ij kl mn|" struct_partnum="|3/3|1/3|" struct_continues="|l|r|">
      fghij
      </a>
      <a x="|x2|" struct_num="|2|" struct_charspan="|" struct_tokens="|kl|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      kl
      </a>
      <a x="|x2|x3|" struct_num="|2|3|" struct_charspan="|1-2|4-5|" struct_tokens="|mn|pq|" struct_tokens_all="||pq rs tu|" struct_partnum="|3/3|1/3|" struct_continues="|l|r|">
      mnopq
      </a>
      <a x="|x3|" struct_num="|3|" struct_charspan="|" struct_tokens="|rs|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      rs
      </a>
      <a x="|x3|" struct_num="|3|" struct_charspan="|1-2|" struct_tokens="|tu|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      tuv
      </a>

- name: 'vrt-decode-tags: Same intra-word structures with attributes with same and
    different values: a<a x="x1" y="y">bcdefg</a>h<a x="x2" y="y">ijklmn</a>o<a x="x3"
    y="y">pqrstu</a>v'
  # hrt-encode-tags input: a<a x="x1" y="y">bcdefg</a>h<a x="x2" y="y">ijklmn</a>o<a x="x3" y="y">pqrstu</a>v
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x1" y="y"|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|7 abcdefg hijklmnopq -->
      <!-- #vrt structure-tag: a x="x2" y="y"|8 abcdefgh ijklmnopqr -->
      <!-- #vrt structure-tag: /a|14 efghijklmn opqrstuv -->
      <!-- #vrt structure-tag: a x="x3" y="y"|15 fghijklmno pqrstuv -->
      <!-- #vrt structure-tag: /a|21 lmnopqrstu v -->
      abcdefghijklmnopqrstuv
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a x="|x1|x2|x3|" y="y" struct_num="|1|2|3|" struct_charspan="|2-7|9-14|16-21|" struct_tokens="|bcdefg|ijklmn|pqrstu|" struct_tokens_all="|bcdefg|ijklmn|pqrstu|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghijklmnopqrstuv
      </a>

- name: 'vrt-decode-tags: Same intra-word structures with attributes with same and
    different values, with a token break: a<a x="x1" y="y">bc defg</a>h<a x="x2" y="y">ij
    klmn</a>o<a x="x3" y="y">pq rstu</a>v'
  # hrt-encode-tags input: a<a x="x1" y="y">bc defg</a>h<a x="x2" y="y">ij klmn</a>o<a x="x3" y="y">pq rstu</a>v
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x1" y="y"|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|7 abcdefg hijklmnopq -->
      <!-- #vrt structure-tag: a x="x2" y="y"|8 abcdefgh ijklmnopqr -->
      <!-- #vrt structure-tag: /a|14 efghijklmn opqrstuv -->
      <!-- #vrt structure-tag: a x="x3" y="y"|15 fghijklmno pqrstuv -->
      <!-- #vrt structure-tag: /a|21 lmnopqrstu v -->
      abc
      defghij
      klmnopq
      rstuv
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a x="|x1|" y="y" struct_num="|1|" struct_charspan="|2-3|" struct_tokens="|bc|" struct_tokens_all="|bc defg|" struct_partnum="|1/2|" struct_continues="|r|">
      abc
      </a>
      <a x="|x1|x2|" y="y" struct_num="|1|2|" struct_charspan="|1-4|6-7|" struct_tokens="|defg|ij|" struct_tokens_all="||ij klmn|" struct_partnum="|2/2|1/2|" struct_continues="|l|r|">
      defghij
      </a>
      <a x="|x2|x3|" y="y" struct_num="|2|3|" struct_charspan="|1-4|6-7|" struct_tokens="|klmn|pq|" struct_tokens_all="||pq rstu|" struct_partnum="|2/2|1/2|" struct_continues="|l|r|">
      klmnopq
      </a>
      <a x="|x3|" y="y" struct_num="|3|" struct_charspan="|1-4|" struct_tokens="|rstu|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      rstuv
      </a>

- name: 'vrt-decode-tags: Same intra-word structures with attributes with same and
    different values, with two token breaks: a<a x="x1" y="y">bc de fg</a>h<a x="x2"
    y="y">ij kl mn</a>o<a x="x3" y="y">pq rs tu</a>v'
  # hrt-encode-tags input: a<a x="x1" y="y">bc de fg</a>h<a x="x2" y="y">ij kl mn</a>o<a x="x3" y="y">pq rs tu</a>v
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x1" y="y"|1 a bcdefghijk -->
      <!-- #vrt structure-tag: /a|7 abcdefg hijklmnopq -->
      <!-- #vrt structure-tag: a x="x2" y="y"|8 abcdefgh ijklmnopqr -->
      <!-- #vrt structure-tag: /a|14 efghijklmn opqrstuv -->
      <!-- #vrt structure-tag: a x="x3" y="y"|15 fghijklmno pqrstuv -->
      <!-- #vrt structure-tag: /a|21 lmnopqrstu v -->
      abc
      de
      fghij
      kl
      mnopq
      rs
      tuv
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a x="|x1|" y="y" struct_num="|1|" struct_charspan="|2-3|" struct_tokens="|bc|" struct_tokens_all="|bc de fg|" struct_partnum="|1/3|" struct_continues="|r|">
      abc
      </a>
      <a x="|x1|" y="y" struct_num="|1|" struct_charspan="|" struct_tokens="|de|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      de
      </a>
      <a x="|x1|x2|" y="y" struct_num="|1|2|" struct_charspan="|1-2|4-5|" struct_tokens="|fg|ij|" struct_tokens_all="||ij kl mn|" struct_partnum="|3/3|1/3|" struct_continues="|l|r|">
      fghij
      </a>
      <a x="|x2|" y="y" struct_num="|2|" struct_charspan="|" struct_tokens="|kl|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      kl
      </a>
      <a x="|x2|x3|" y="y" struct_num="|2|3|" struct_charspan="|1-2|4-5|" struct_tokens="|mn|pq|" struct_tokens_all="||pq rs tu|" struct_partnum="|3/3|1/3|" struct_continues="|l|r|">
      mnopq
      </a>
      <a x="|x3|" y="y" struct_num="|3|" struct_charspan="|" struct_tokens="|rs|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      rs
      </a>
      <a x="|x3|" y="y" struct_num="|3|" struct_charspan="|1-2|" struct_tokens="|tu|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      tuv
      </a>

- name: 'vrt-decode-tags: Nested same intra-word structures with attributes with same
    and different values: a<a x="x1" y="y">bcdefgh<a x="x2" y="y">ijklmn</a>o<a x="x3"
    y="y">pqrstu</a>v</a>'
  # hrt-encode-tags input: a<a x="x1" y="y">bcdefgh<a x="x2" y="y">ijklmn</a>o<a x="x3" y="y">pqrstu</a>v</a>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x1" y="y"|1 a bcdefghijk -->
      <!-- #vrt structure-tag: a x="x2" y="y"|8 abcdefgh ijklmnopqr -->
      <!-- #vrt structure-tag: /a|14 efghijklmn opqrstuv -->
      <!-- #vrt structure-tag: a x="x3" y="y"|15 fghijklmno pqrstuv -->
      <!-- #vrt structure-tag: /a|21 lmnopqrstu v -->
      <!-- #vrt structure-tag: /a|22 mnopqrstuv  -->
      abcdefghijklmnopqrstuv
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a x="|x1|x2|x3|" y="y" struct_num="|1|2|3|" struct_charspan="|2-22|9-14|16-21|" struct_tokens="|bcdefghijklmnopqrstuv|ijklmn|pqrstu|" struct_tokens_all="|bcdefghijklmnopqrstuv|ijklmn|pqrstu|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghijklmnopqrstuv
      </a>

- name: 'vrt-decode-tags: Nested same and different intra-word structures with attributes
    with same and different values: a<a x="x1" y="y">bcdefgh<b x="x2" y="y">ijklmn</b>o<a
    x="x3" y="y">pqrstu</a>v</a>'
  # hrt-encode-tags input: a<a x="x1" y="y">bcdefgh<b x="x2" y="y">ijklmn</b>o<a x="x3" y="y">pqrstu</a>v</a>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x1" y="y"|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b x="x2" y="y"|8 abcdefgh ijklmnopqr -->
      <!-- #vrt structure-tag: /b|14 efghijklmn opqrstuv -->
      <!-- #vrt structure-tag: a x="x3" y="y"|15 fghijklmno pqrstuv -->
      <!-- #vrt structure-tag: /a|21 lmnopqrstu v -->
      <!-- #vrt structure-tag: /a|22 mnopqrstuv  -->
      abcdefghijklmnopqrstuv
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a x="|x1|x3|" y="y" struct_num="|1|3|" struct_charspan="|2-22|16-21|" struct_tokens="|bcdefghijklmnopqrstuv|pqrstu|" struct_tokens_all="|bcdefghijklmnopqrstuv|pqrstu|" struct_partnum="|1/1|" struct_continues="||">
      <b x="x2" y="y" struct_num="|2|" struct_charspan="|9-14|" struct_tokens="|ijklmn|" struct_tokens_all="|ijklmn|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghijklmnopqrstuv
      </b>
      </a>

- name: 'vrt-decode-tags: Nested and interleaved different structures with attributes
    with same and different values: a<a x="x1" y="y">bcdefgh<b x="x2" y="y">ijklmn</a>o<c
    x="x3" y="y">pqrstu</c>v</b>'
  # hrt-encode-tags input: a<a x="x1" y="y">bcdefgh<b x="x2" y="y">ijklmn</a>o<c x="x3" y="y">pqrstu</c>v</b>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x1" y="y"|1 a bcdefghijk -->
      <!-- #vrt structure-tag: b x="x2" y="y"|8 abcdefgh ijklmnopqr -->
      <!-- #vrt structure-tag: /a|14 efghijklmn opqrstuv -->
      <!-- #vrt structure-tag: c x="x3" y="y"|15 fghijklmno pqrstuv -->
      <!-- #vrt structure-tag: /c|21 lmnopqrstu v -->
      <!-- #vrt structure-tag: /b|22 mnopqrstuv  -->
      abcdefghijklmnopqrstuv
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a x="x1" y="y" struct_num="|1|" struct_charspan="|2-14|" struct_tokens="|bcdefghijklmn|" struct_tokens_all="|bcdefghijklmn|" struct_partnum="|1/1|" struct_continues="||">
      <b x="x2" y="y" struct_num="|2|" struct_charspan="|9-22|" struct_tokens="|ijklmnopqrstuv|" struct_tokens_all="|ijklmnopqrstuv|" struct_partnum="|1/1|" struct_continues="||">
      <c x="x3" y="y" struct_num="|3|" struct_charspan="|16-21|" struct_tokens="|pqrstu|" struct_tokens_all="|pqrstu|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghijklmnopqrstuv
      </c>
      </b>
      </a>

- name: 'vrt-decode-tags: Two same intra-token structures within the same token (nested), with
    different attributes: a<a x="x" z="z">bc<a y="y" z="z">defg</a>hi</a>j'
  # hrt-encode-tags input: a<a x="x" z="z">bc<a y="y" z="z">defg</a>hi</a>j
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x" z="z"|1 a bcdefghij -->
      <!-- #vrt structure-tag: a y="y" z="z"|3 abc defghij -->
      <!-- #vrt structure-tag: /a|7 abcdefg hij -->
      <!-- #vrt structure-tag: /a|9 abcdefghi j -->
      abcdefghij
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a x="|x||" z="z" y="||y|" struct_num="|1|2|" struct_charspan="|2-9|4-7|" struct_tokens="|bcdefghi|defg|" struct_tokens_all="|bcdefghi|defg|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghij
      </a>

- name: 'vrt-decode-tags: Two same intra-token structures within the same token (consecutive), with
    different attributes: a<a x="x">bc</a>defg<a y="y">hi</a>j'
  # hrt-encode-tags input: a<a x="x">bc</a>defg<a y="y">hi</a>j
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x"|1 a bcdefghij -->
      <!-- #vrt structure-tag: /a|3 abc defghij -->
      <!-- #vrt structure-tag: a y="y"|7 abcdefg hij -->
      <!-- #vrt structure-tag: /a|9 abcdefghi j -->
      abcdefghij
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a x="|x||" y="||y|" struct_num="|1|2|" struct_charspan="|2-3|8-9|" struct_tokens="|bc|hi|" struct_tokens_all="|bc|hi|" struct_partnum="|1/1|" struct_continues="||">
      abcdefghij
      </a>

- name: 'vrt-decode-tags: Same structures with same or different values for attributes:
    <a x="x1" y="y" z="z1">ab</a>cd<a x="x2" y="y" z="z2">ef</a> <a x="x3" y="y" z="z3">gh</a>'
  # hrt-encode-tags input: <a x="x1" y="y" z="z1">ab</a>cd<a x="x2" y="y" z="z2">ef</a> <a x="x3" y="y" z="z3">gh</a>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x1" y="y" z="z1"|0  abcdefgh -->
      <!-- #vrt structure-tag: /a|2 ab cdefgh -->
      <!-- #vrt structure-tag: a x="x2" y="y" z="z2"|4 abcd efgh -->
      <!-- #vrt structure-tag: /a|6 abcdef gh -->
      <!-- #vrt structure-tag: a x="x3" y="y" z="z3"|6 abcdef gh -->
      <!-- #vrt structure-tag: /a|8 abcdefgh  -->
      abcdef
      ghijkl
    returncode: 0
    stderr: ""
    stdout: |
      <a x="|x1|x2|" y="y" z="|z1|z2|" st_charspan="|1-2|5-6|" st_text="|ab|ef|" st_cont="">
      abcdef
      </a>
      <a x="|x3|" y="y" z="|z3|" st_charspan="|1-2|" st_text="|gh|" st_cont="">
      gh
      </a>

- name: 'vrt-decode-tags: Same structures with same or different values for attributes, two same values within one token:
    <a x="x1" y="y" z="z1">ab</a>cd<a x="x2" y="y" z="z2">ef</a> <a x="x3" y="y" z="z3">gh</a>ij<a
    x="x3" y="y" z="z4">kl</a>'
  # hrt-encode-tags input: <a x="x1" y="y" z="z1">ab</a>cd<a x="x2" y="y" z="z2">ef</a> <a x="x3" y="y" z="z3">gh</a>ij<a x="x3" y="y" z="z4">kl</a>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x1" y="y" z="z1"|0  abcdefghij -->
      <!-- #vrt structure-tag: /a|2 ab cdefghijkl -->
      <!-- #vrt structure-tag: a x="x2" y="y" z="z2"|4 abcd efghijkl -->
      <!-- #vrt structure-tag: /a|6 abcdef ghijkl -->
      <!-- #vrt structure-tag: a x="x3" y="y" z="z3"|6 abcdef ghijkl -->
      <!-- #vrt structure-tag: /a|8 abcdefgh ijkl -->
      <!-- #vrt structure-tag: a x="x3" y="y" z="z4"|10 abcdefghij kl -->
      <!-- #vrt structure-tag: /a|12 cdefghijkl  -->
      abcdef
      ghijkl
    returncode: 0
    stderr: ""
    stdout: |
      <a x="|x1|x2|" y="y" z="|z1|z2|" st_charspan="|1-2|5-6|" st_text="|ab|ef|" st_cont="">
      abcdef
      </a>
      <a x="|x3|" y="y" z="|z3|z4|" st_charspan="|1-2|5-6|" st_text="|gh|kl|" st_cont="">
      ghijkl
      </a>

- name: 'vrt-decode-tags: Same and different structures with same or different values for attributes:
    <a x="x1" y="y" z="z1">ab</a>cd<a x="x2" y="y" z="z2">ef</a> <a x="x3" y="y" z="z3">gh</a>ij<a
    x="x3" y="y" z="z4">kl</a>'
  # hrt-encode-tags input: <a x="x1" y="y" z="z1">ab</a>cd<a x="x2" y="y" z="z2">ef</a> <a x="x3" y="y" z="z3">gh</a>ij<a x="x3" y="y" z="z4">kl</a>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x1" y="y" z="z1"|0  abcdefghij -->
      <!-- #vrt structure-tag: /a|2 ab cdefghijkl -->
      <!-- #vrt structure-tag: a x="x2" y="y" z="z2"|4 abcd efghijkl -->
      <!-- #vrt structure-tag: /a|6 abcdef ghijkl -->
      <!-- #vrt structure-tag: a x="x3" y="y" z="z3"|6 abcdef ghijkl -->
      <!-- #vrt structure-tag: /a|8 abcdefgh ijkl -->
      <!-- #vrt structure-tag: b x="x3" y="y" z="z4"|10 abcdefghij kl -->
      <!-- #vrt structure-tag: /b|12 cdefghijkl  -->
      abcdef
      ghijkl
    returncode: 0
    stderr: ""
    stdout: |
      <a x="|x1|x2|" y="y" z="|z1|z2|" st_charspan="|1-2|5-6|" st_text="|ab|ef|" st_cont="">
      abcdef
      </a>
      <a x="|x3|" y="y" z="|z3|" st_charspan="|1-2|" st_text="|gh|" st_cont="">
      <b x="x3" y="y" z="z4" st_charspan="|5-6|" st_text="|kl|" st_cont="">
      ghijkl
      </a>

- name: 'vrt-decode-tags: Nested same whole-token and intra-token structures: <a x="x1">ab
    c<a x="x2">d ef g</a>h ij</a>'
  # hrt-encode-tags input: <a x="x1">ab c<a x="x2">d ef g</a>h ij</a>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a x="x1"|0  abcdefghij -->
      <!-- #vrt structure-tag: a x="x2"|3 abc defghij -->
      <!-- #vrt structure-tag: /a|7 abcdefg hij -->
      <!-- #vrt structure-tag: /a|10 abcdefghij  -->
      ab
      cd
      ef
      gh
      ij
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a x="x1" struct_num="|1|">
      ab
      <a x="x2" struct_num="|2|" struct_charspan="|2-2|" struct_tokens="|d|" struct_tokens_all="|d ef g|" struct_partnum="|1/3|" struct_continues="|r|">
      cd
      </a>
      <a x="x2" struct_num="|2|" struct_charspan="|" struct_tokens="|ef|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      ef
      </a>
      <a x="x2" struct_num="|2|" struct_charspan="|1-1|" struct_tokens="|g|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      gh
      </a>
      ij
      </a>

- name: 'vrt-decode-tags: Nested same structures covering the same tokens but one
    beginning at the start of a token and another in the middle: <a>abc<a>de fg</a>hi</a>j'
  # hrt-encode-tags input: <a>abc<a>de fg</a>hi</a>j
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|0  abcdefghij -->
      <!-- #vrt structure-tag: a|3 abc defghij -->
      <!-- #vrt structure-tag: /a|7 abcdefg hij -->
      <!-- #vrt structure-tag: /a|9 abcdefghi j -->
      abcde
      fghij
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|2|" struct_charspan="|1-5|4-5|" struct_tokens="|abcde|de|" struct_tokens_all="|abcde fghi|de fg|" struct_partnum="|1/2|" struct_continues="|r|">
      abcde
      </a>
      <a struct_num="|1|2|" struct_charspan="|1-4|1-2|" struct_tokens="|fghi|fg|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      fghij
      </a>

- name: 'vrt-decode-tags: Nested same structures covering the same tokens but one
    ending at the end of a token and another in the middle: a<a>bc<a>de fg</a>hij</a>'
  # hrt-encode-tags input: a<a>bc<a>de fg</a>hij</a>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|1 a bcdefghij -->
      <!-- #vrt structure-tag: a|3 abc defghij -->
      <!-- #vrt structure-tag: /a|7 abcdefg hij -->
      <!-- #vrt structure-tag: /a|10 abcdefghij  -->
      abcde
      fghij
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|2|" struct_charspan="|2-5|4-5|" struct_tokens="|bcde|de|" struct_tokens_all="|bcde fghij|de fg|" struct_partnum="|1/2|" struct_continues="|r|">
      abcde
      </a>
      <a struct_num="|1|2|" struct_charspan="|1-5|1-2|" struct_tokens="|fghij|fg|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      fghij
      </a>

- name: 'vrt-decode-tags: Nested same structures covering the same tokens but one
    beginning at the start of a token and ending at the end of a token and another
    in the middle: <a>abc<a>de fg</a>hij</a>'
  # hrt-encode-tags input: <a>abc<a>de fg</a>hij</a>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|0  abcdefghij -->
      <!-- #vrt structure-tag: a|3 abc defghij -->
      <!-- #vrt structure-tag: /a|7 abcdefg hij -->
      <!-- #vrt structure-tag: /a|10 abcdefghij  -->
      abcde
      fghij
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|">
      <a struct_num="|2|" struct_charspan="|4-5|" struct_tokens="|de|" struct_tokens_all="|de fg|" struct_partnum="|1/2|" struct_continues="|r|">
      abcde
      </a>
      <a struct_num="|2|" struct_charspan="|1-2|" struct_tokens="|fg|" struct_tokens_all="||" struct_partnum="|2/2|" struct_continues="|l|">
      fghij
      </a>
      </a>

- name: 'vrt-decode-tags: Nested same structures covering the same tokens but one
    beginning at the start of a token and ending at the end of a token and another
    in the middle, with one token in the middle: <a>abc<a>d ef g</a>hij</a>'
  # hrt-encode-tags input: <a>abc<a>d ef g</a>hij</a>
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|0  abcdefghij -->
      <!-- #vrt structure-tag: a|3 abc defghij -->
      <!-- #vrt structure-tag: /a|7 abcdefg hij -->
      <!-- #vrt structure-tag: /a|10 abcdefghij  -->
      abcd
      ef
      ghij
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|">
      <a struct_num="|2|" struct_charspan="|4-4|" struct_tokens="|d|" struct_tokens_all="|d ef g|" struct_partnum="|1/3|" struct_continues="|r|">
      abcd
      </a>
      <a struct_num="|2|" struct_charspan="|" struct_tokens="|ef|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      ef
      </a>
      <a struct_num="|2|" struct_charspan="|1-1|" struct_tokens="|g|" struct_tokens_all="||" struct_partnum="|3/3|" struct_continues="|l|">
      ghij
      </a>
      </a>

- name: 'vrt-decode-tags: Nested same structures covering the same tokens but one
    beginning at the start of a token and another in the middle, both ending in the
    middle of a token, with one token in between: <a>abc<a>d ef g</a>hi</a>j'
  # hrt-encode-tags input: <a>abc<a>d ef g</a>hi</a>j
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|0  abcdefghij -->
      <!-- #vrt structure-tag: a|3 abc defghij -->
      <!-- #vrt structure-tag: /a|7 abcdefg hij -->
      <!-- #vrt structure-tag: /a|9 abcdefghi j -->
      abcd
      ef
      ghij
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a struct_num="|1|" struct_charspan="|" struct_tokens="|abcd ef|" struct_tokens_all="|abcd ef ghi|" struct_partnum="|1/2|" struct_continues="|r|">
      <a struct_num="|2|" struct_charspan="|4-4|" struct_tokens="|d|" struct_tokens_all="|d ef g|" struct_partnum="|1/3|" struct_continues="|r|">
      abcd
      </a>
      <a struct_num="|2|" struct_charspan="|" struct_tokens="|ef|" struct_tokens_all="||" struct_partnum="|2/3|" struct_continues="|lr|">
      ef
      </a>
      </a>
      <a struct_num="|1|2|" struct_charspan="|1-3|1-1|" struct_tokens="|ghi|g|" struct_tokens_all="||" struct_partnum="|2/2|3/3|" struct_continues="|l|">
      ghij
      </a>

- name: 'vrt-decode-tags: --attribute-name-prefix'
  # hrt-encode-tags input: a<a x="x">bc</a>defg<a y="y">hi</a>j
  input:
    cmdline: vrt-decode-tags --attribute-name-prefix="test_"
    stdin: |
      <!-- #vrt structure-tag: a x="x"|1 a bcdefghij -->
      <!-- #vrt structure-tag: /a|3 abc defghij -->
      <!-- #vrt structure-tag: a y="y"|7 abcdefg hij -->
      <!-- #vrt structure-tag: /a|9 abcdefghi j -->
      abcdefghij
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a x="|x||" y="||y|" test_num="|1|2|" test_charspan="|2-3|8-9|" test_tokens="|bc|hi|" test_tokens_all="|bc|hi|" test_partnum="|1/1|" test_continues="||">
      abcdefghij
      </a>

- name: 'vrt-decode-tags: Offset past the end of the region'
  # Previously, this crashed the script with IndexError
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a|0  abcd -->
      <!-- #vrt structure-tag: /a|10 abcdefghi  -->
      abcdefghi
  output:
    returncode: 0
    stderr: |
      vrt-decode-tags: Warning: Tag </a> (contexts abcdefghi, ): expected offset 10, got 9: possibly intra-word spaces
    stdout: |
      <a struct_num="|1|">
      abcdefghi
      </a>

- name: 'vrt-decode-tags: Tag with an attribute converted to feature set and the same tag without the attribute'
  # hrt-encode-tags input: <a n="1">abc</a><a n="2">def</a> <a>ghi</a>
  # Previously, this crashed the script with a KeyError
  input:
    cmdline: vrt-decode-tags
    stdin: |
      <!-- #vrt structure-tag: a n="1"|0  abcdefghi -->
      <!-- #vrt structure-tag: /a|3 abc defghi -->
      <!-- #vrt structure-tag: a n="2"|3 abc defghi -->
      <!-- #vrt structure-tag: /a|6 abcdef ghi -->
      <!-- #vrt structure-tag: a|6 abcdef ghi -->
      <!-- #vrt structure-tag: /a|9 abcdefghi  -->
      abcdef
      ghi
  output:
    returncode: 0
    stderr: ""
    stdout: |
      <a n="|1|2|" struct_num="|1|2|" struct_charspan="|1-3|4-6|" struct_tokens="|abc|def|" struct_tokens_all="|abc|def|" struct_partnum="|1/1|" struct_continues="||">
      abcdef
      </a>
      <a struct_num="|3|" n="|">
      ghi
      </a>
