# Map the TDT dependency relation labels to those used in the Korp
# word picture: SS (subject), OBJ (object), ADV (adverbial), PA
# (preposition), AT ((pre)modifier), ET (postmodifier). Additional
# labels: CPL (complement), APP (apposition), AUX (auxiliary verb),
# CPR (compared element), CRD (coordinated element), CPS (copular
# subject), OTH (other), MOD (modifier), OWN (owner), VPT (verb
# particle). Relations to be ignored are marked with a dash.
#
# In addition, the mapping contains in comments a few tentative
# relation transformations: constructs for specifying derived
# relations that do not occur directly in the data. They are not (yet)
# supported by vrt-extract-relations.py.


# For a name relation, add an extra head containing all the words from
# dependent to head:
# &name	h = d..h

# For a number relation, add an extra head containing all the words
# in the depenceny chain, from the first dependent to the head:
# &number	h = d<<h

_	-
acomp	CPL
adpos	PA
advcl	ADV
# ADV if head POS is V or Adv; otherwise MOD
# advmod	ADV: h.pos~"V|Adv"; MOD
advmod	ADV
amod	AT
appos	APP
# Does not occur in corpora
arg	-
aux	AUX
auxpass	-
cc	-
ccomp	CPL
# Does not occur in corpora
comp	-
compar	CPR
comparator	-
complm	AT
conj	CRD
cop	-
csubj	SS
csubj-cop	CPS
dep	OTH
det	-
dobj	OBJ
# Does not occur in corpora
ellipsis	-
gobj	AT
gsubj	AT
iccomp	CPL
infmod	ET
intj	-
mark	-
# Does not occur in corpora
mod	AT
# AT; inverse relation (dependent to head) ET; head covers all words
# from the dependent to head:
# name	AT; ^ET; @h = d..h
name	AT
neg	-
nn	AT
nommod	MOD
# Add an OWN relation from the nsubj dependent of head to the
# dependent of nommod-own
# nommod-own	OWN: -> h>nsubj d
nommod-own	-
nsubj	SS
nsubj-cop	CPS
num	-
number	-
parataxis	CRD
partmod	MOD
poss	AT
preconj	-
prt	VPT
punct	-
quantmod	-
rcmod	MOD
rel	-
ROOT	-
# Does not occur in corpora
subj	SS
voc	-
xcomp	CPL
# Does not occur in corpora
xsubj	SS
# Does not occur in corpora
xsubj-cop	SS
